<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="classkeycpp_1_1_figure" kind="class" prot="public">
    <compoundname>keycpp::Figure</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a090770b4d236338185a0a4bf3cdab305" prot="private" static="no" mutable="no">
        <type><ref refid="class_gnuplot" kindref="compound">Gnuplot</ref></type>
        <definition>Gnuplot keycpp::Figure::g</definition>
        <argsstring></argsstring>
        <name>g</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="81" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a9471608532e10f8854ddf20b7598f2ce" prot="private" static="no" mutable="no">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; double &gt;</type>
        <definition>matrix&lt;double&gt; keycpp::Figure::colors</definition>
        <argsstring></argsstring>
        <name>colors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="82" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1ad0b2255b5ea3ae9e47eaab50c14b08a6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classkeycpp_1_1_plots" kindref="compound">Plots</ref> &gt;</type>
        <definition>std::vector&lt;Plots&gt; keycpp::Figure::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="83" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1aac35cd238a35d51822f4ba78c83f105b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::fontsize</definition>
        <argsstring></argsstring>
        <name>fontsize</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="84" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a2e137931dead3711f34c945e47f26342" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string keycpp::Figure::fontname</definition>
        <argsstring></argsstring>
        <name>fontname</name>
        <initializer>= &quot;Helvetica&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="85" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1af7b1068f17391548038b9fdcfee37504" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool keycpp::Figure::multiplot</definition>
        <argsstring></argsstring>
        <name>multiplot</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="86" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1acff322c7d1fff0d294e7e57ec7d63611" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::current_plot</definition>
        <argsstring></argsstring>
        <name>current_plot</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="87" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1aadf70a04a81caed7bc1ba30eac255c79" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::multi_rows</definition>
        <argsstring></argsstring>
        <name>multi_rows</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="88" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a4c366a20b79f8f2d99fa02588c82997b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::multi_cols</definition>
        <argsstring></argsstring>
        <name>multi_cols</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="89" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a51e4a69cfb2f249e8880d21b7b452c45" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool keycpp::Figure::final_replot</definition>
        <argsstring></argsstring>
        <name>final_replot</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="90" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a0f68e631079ba87244bf6c311a37e43a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <initializer>= 560</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="91" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1adf35f91a45d7727e50c052ce50530653" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <initializer>= 420</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="92" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1ae8a318c5edf3025eaa7154d1839f489d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string keycpp::Figure::term</definition>
        <argsstring></argsstring>
        <name>term</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="93" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1acd006fa122b634b92ff43427080dfd70" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string keycpp::Figure::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="94" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a3224183e0cbd0a034f83946263a7c881" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>keycpp::Figure::Figure</definition>
        <argsstring>()</argsstring>
        <name>Figure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="97" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="145" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a318799c9b423d48894395b1820c55c54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>keycpp::Figure::~Figure</definition>
        <argsstring>()</argsstring>
        <name>~Figure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="98" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a6d2444603362a7782232662410b364aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="99" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="181" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aa5761ef52842e596dca311c43920b7a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="100" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="217" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aa057f62607febd829d3e1a54801473f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="101" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="289" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a21fc5536de2cdaf6272525a28f9e4072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="102" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="683" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a2c0f7d871472571200258a5c9b95474e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="103" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="693" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a3646790552f73645bf926b1678fede40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="104" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="703" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a88e55b3a2c1b05c7c7fe2e6785e11f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="105" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="728" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a2e6daf7811c3d34fabb83bc8368e1e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="106" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="737" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a39dd5e2d5e6acb6db99ac75476ea777a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="107" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="746" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a35987b305f55c3b8c612fbaec2223060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; x, matrix&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="108" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="755" bodyend="766"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a9000f7c76f21a37d4c70bee3103fe623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; x, matrix&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="109" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="768" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a79f823ad4b62e20a85c9f1270e65fb01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; x, matrix&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="110" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="781" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a35b49db4a5665eaf2561f3f4c1f384a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="111" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="863" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ae388faef03ea59e0bf96c1793db909a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="112" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="886" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ad3f084b29b2b32cb07632eaba766c77e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; x, std::vector&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="113" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="909" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aaf028e14b5cf294215cfa78fe1aeae3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; T &gt; x, matrix&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="114" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="794" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a85a510dd4a5acebaa8cd2351f3d5f208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; T &gt; x, matrix&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="115" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="817" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a61695cfaa39e175e95d6f8dca2184cbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; T &gt; x, matrix&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="116" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="840" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aa92130b35ce5dd9bc52e1ed4bd85682c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogx</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>semilogx</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="117" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="932" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a442655002324395b08e5511bbb02146a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogx</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>semilogx</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="118" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="938" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a849fa48f8fb7d4ee9cb205a5310f2c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogx</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>semilogx</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="119" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="944" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a8fa3aba0daf6f74bbb7c1d0553156b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogy</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>semilogy</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="120" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="950" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a15fbce90514b55af60d3819c8da2561f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogy</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>semilogy</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="121" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="956" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a52b6a651edb036721bfa6252eae0e70d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogy</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>semilogy</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="122" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="962" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aed54e550273e8e6cd4b28b1177364a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::loglog</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>loglog</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="123" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="968" bodyend="973"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1af311b0c4a48a112abb571acc8cf9ad6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::loglog</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>loglog</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="124" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="975" bodyend="980"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ae5dce11f219f879eaadc52c54bff35b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::loglog</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>loglog</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="125" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="982" bodyend="987"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1addd610a718f021f3e6c7c94f9bc7f285" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::xlabel</definition>
        <argsstring>(std::string xlabel_text)</argsstring>
        <name>xlabel</name>
        <param>
          <type>std::string</type>
          <declname>xlabel_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="126" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="989" bodyend="993"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aa965967db2165b001860f75fc22c9f28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::ylabel</definition>
        <argsstring>(std::string ylabel_text)</argsstring>
        <name>ylabel</name>
        <param>
          <type>std::string</type>
          <declname>ylabel_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="127" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="995" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a922bd966ed40095f0ae7fa184f9d0ada" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::title</definition>
        <argsstring>(std::string title_text)</argsstring>
        <name>title</name>
        <param>
          <type>std::string</type>
          <declname>title_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="128" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1001" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a3c036559f8ad56b099ac0b44c652225d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::grid_on</definition>
        <argsstring>()</argsstring>
        <name>grid_on</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="129" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1007" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a3736e01bc278c2c2b47e4ff046fdda0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::grid_off</definition>
        <argsstring>()</argsstring>
        <name>grid_off</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="130" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1013" bodyend="1017"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a65b80e5b67c7bbf225e3001a538a6dad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::hold_on</definition>
        <argsstring>()</argsstring>
        <name>hold_on</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="131" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1019" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ae5e5ac67e9450ea4fbf06fb3fcc6523a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::hold_off</definition>
        <argsstring>()</argsstring>
        <name>hold_off</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="132" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1025" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a59b0acbd975579bf8330849f004637fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::subplot</definition>
        <argsstring>(int mrows, int mcols, int index)</argsstring>
        <name>subplot</name>
        <param>
          <type>int</type>
          <declname>mrows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mcols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="133" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1335" bodyend="1353"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a2b5a0aae355a33024d2f6c51a8754786" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::legend</definition>
        <argsstring>(std::initializer_list&lt; std::string &gt; lst, std::string property1=&quot;&quot;, std::string val1=&quot;&quot;, std::string property2=&quot;&quot;, std::string val2=&quot;&quot;)</argsstring>
        <name>legend</name>
        <param>
          <type>std::initializer_list&lt; std::string &gt;</type>
          <declname>lst</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>val1</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>val2</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="134" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1031" bodyend="1207"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aa01c44e6509c7075f4f547531c39741b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::ylim</definition>
        <argsstring>(std::initializer_list&lt; double &gt; lst)</argsstring>
        <name>ylim</name>
        <param>
          <type>std::initializer_list&lt; double &gt;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="135" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1285" bodyend="1308"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ae779c53eebbee42148324bd8adfd7d01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::xlim</definition>
        <argsstring>(std::initializer_list&lt; double &gt; lst)</argsstring>
        <name>xlim</name>
        <param>
          <type>std::initializer_list&lt; double &gt;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="136" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1310" bodyend="1333"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a47cae082612e5436a6b0bc3d7f27e9d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::replot_all</definition>
        <argsstring>()</argsstring>
        <name>replot_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="137" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1210" bodyend="1235"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ab8d777d1b44e242b104350093ef09543" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::setFontsize</definition>
        <argsstring>(int p_fontsize)</argsstring>
        <name>setFontsize</name>
        <param>
          <type>int</type>
          <declname>p_fontsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="138" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a6c1e59c4e8288e3880bde70db3723037" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int keycpp::Figure::getFontsize</definition>
        <argsstring>()</argsstring>
        <name>getFontsize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="139" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a7375fe8611759fda180d626f91eab510" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::set</definition>
        <argsstring>(std::string property, double val)</argsstring>
        <name>set</name>
        <param>
          <type>std::string</type>
          <declname>property</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="140" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1237" bodyend="1252"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ac6d1881c6dc996eb508adf2126905d38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::print</definition>
        <argsstring>(std::string pterm, std::string pfilename)</argsstring>
        <name>print</name>
        <param>
          <type>std::string</type>
          <declname>pterm</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>pfilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="141" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1af82ed243d2b4f59f5e01566eb03cf9d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::set</definition>
        <argsstring>(std::string property, std::initializer_list&lt; int &gt; list)</argsstring>
        <name>set</name>
        <param>
          <type>std::string</type>
          <declname>property</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; int &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="142" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1254" bodyend="1283"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="79" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="78" bodyend="143"/>
    <listofallmembers>
      <member refid="classkeycpp_1_1_figure_1a9471608532e10f8854ddf20b7598f2ce" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>colors</name></member>
      <member refid="classkeycpp_1_1_figure_1acff322c7d1fff0d294e7e57ec7d63611" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>current_plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a3224183e0cbd0a034f83946263a7c881" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>Figure</name></member>
      <member refid="classkeycpp_1_1_figure_1acd006fa122b634b92ff43427080dfd70" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>filename</name></member>
      <member refid="classkeycpp_1_1_figure_1a51e4a69cfb2f249e8880d21b7b452c45" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>final_replot</name></member>
      <member refid="classkeycpp_1_1_figure_1a2e137931dead3711f34c945e47f26342" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>fontname</name></member>
      <member refid="classkeycpp_1_1_figure_1aac35cd238a35d51822f4ba78c83f105b" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>fontsize</name></member>
      <member refid="classkeycpp_1_1_figure_1a090770b4d236338185a0a4bf3cdab305" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>g</name></member>
      <member refid="classkeycpp_1_1_figure_1a6c1e59c4e8288e3880bde70db3723037" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>getFontsize</name></member>
      <member refid="classkeycpp_1_1_figure_1a3736e01bc278c2c2b47e4ff046fdda0e" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>grid_off</name></member>
      <member refid="classkeycpp_1_1_figure_1a3c036559f8ad56b099ac0b44c652225d" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>grid_on</name></member>
      <member refid="classkeycpp_1_1_figure_1ae5e5ac67e9450ea4fbf06fb3fcc6523a" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>hold_off</name></member>
      <member refid="classkeycpp_1_1_figure_1a65b80e5b67c7bbf225e3001a538a6dad" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>hold_on</name></member>
      <member refid="classkeycpp_1_1_figure_1a2b5a0aae355a33024d2f6c51a8754786" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>legend</name></member>
      <member refid="classkeycpp_1_1_figure_1aed54e550273e8e6cd4b28b1177364a70" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>loglog</name></member>
      <member refid="classkeycpp_1_1_figure_1af311b0c4a48a112abb571acc8cf9ad6a" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>loglog</name></member>
      <member refid="classkeycpp_1_1_figure_1ae5dce11f219f879eaadc52c54bff35b4" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>loglog</name></member>
      <member refid="classkeycpp_1_1_figure_1adf35f91a45d7727e50c052ce50530653" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>m_height</name></member>
      <member refid="classkeycpp_1_1_figure_1a0f68e631079ba87244bf6c311a37e43a" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>m_width</name></member>
      <member refid="classkeycpp_1_1_figure_1a4c366a20b79f8f2d99fa02588c82997b" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>multi_cols</name></member>
      <member refid="classkeycpp_1_1_figure_1aadf70a04a81caed7bc1ba30eac255c79" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>multi_rows</name></member>
      <member refid="classkeycpp_1_1_figure_1af7b1068f17391548038b9fdcfee37504" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>multiplot</name></member>
      <member refid="classkeycpp_1_1_figure_1ad0b2255b5ea3ae9e47eaab50c14b08a6" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>p</name></member>
      <member refid="classkeycpp_1_1_figure_1a6d2444603362a7782232662410b364aa" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1aa5761ef52842e596dca311c43920b7a0" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1aa057f62607febd829d3e1a54801473f8" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a21fc5536de2cdaf6272525a28f9e4072" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a2c0f7d871472571200258a5c9b95474e" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a3646790552f73645bf926b1678fede40" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a88e55b3a2c1b05c7c7fe2e6785e11f58" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a2e6daf7811c3d34fabb83bc8368e1e7c" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a39dd5e2d5e6acb6db99ac75476ea777a" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a35987b305f55c3b8c612fbaec2223060" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a9000f7c76f21a37d4c70bee3103fe623" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a79f823ad4b62e20a85c9f1270e65fb01" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a35b49db4a5665eaf2561f3f4c1f384a5" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1ae388faef03ea59e0bf96c1793db909a4" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1ad3f084b29b2b32cb07632eaba766c77e" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1aaf028e14b5cf294215cfa78fe1aeae3e" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a85a510dd4a5acebaa8cd2351f3d5f208" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a61695cfaa39e175e95d6f8dca2184cbf" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1ac6d1881c6dc996eb508adf2126905d38" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>print</name></member>
      <member refid="classkeycpp_1_1_figure_1a47cae082612e5436a6b0bc3d7f27e9d9" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>replot_all</name></member>
      <member refid="classkeycpp_1_1_figure_1aa92130b35ce5dd9bc52e1ed4bd85682c" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogx</name></member>
      <member refid="classkeycpp_1_1_figure_1a442655002324395b08e5511bbb02146a" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogx</name></member>
      <member refid="classkeycpp_1_1_figure_1a849fa48f8fb7d4ee9cb205a5310f2c23" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogx</name></member>
      <member refid="classkeycpp_1_1_figure_1a8fa3aba0daf6f74bbb7c1d0553156b44" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogy</name></member>
      <member refid="classkeycpp_1_1_figure_1a15fbce90514b55af60d3819c8da2561f" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogy</name></member>
      <member refid="classkeycpp_1_1_figure_1a52b6a651edb036721bfa6252eae0e70d" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogy</name></member>
      <member refid="classkeycpp_1_1_figure_1a7375fe8611759fda180d626f91eab510" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>set</name></member>
      <member refid="classkeycpp_1_1_figure_1af82ed243d2b4f59f5e01566eb03cf9d3" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>set</name></member>
      <member refid="classkeycpp_1_1_figure_1ab8d777d1b44e242b104350093ef09543" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>setFontsize</name></member>
      <member refid="classkeycpp_1_1_figure_1a59b0acbd975579bf8330849f004637fc" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>subplot</name></member>
      <member refid="classkeycpp_1_1_figure_1ae8a318c5edf3025eaa7154d1839f489d" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>term</name></member>
      <member refid="classkeycpp_1_1_figure_1a922bd966ed40095f0ae7fa184f9d0ada" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>title</name></member>
      <member refid="classkeycpp_1_1_figure_1addd610a718f021f3e6c7c94f9bc7f285" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>xlabel</name></member>
      <member refid="classkeycpp_1_1_figure_1ae779c53eebbee42148324bd8adfd7d01" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>xlim</name></member>
      <member refid="classkeycpp_1_1_figure_1aa965967db2165b001860f75fc22c9f28" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>ylabel</name></member>
      <member refid="classkeycpp_1_1_figure_1aa01c44e6509c7075f4f547531c39741b" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>ylim</name></member>
      <member refid="classkeycpp_1_1_figure_1a318799c9b423d48894395b1820c55c54" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>~Figure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
