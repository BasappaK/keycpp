<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="classkeycpp_1_1_figure" kind="class" prot="public">
    <compoundname>keycpp::Figure</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a090770b4d236338185a0a4bf3cdab305" prot="private" static="no" mutable="no">
        <type><ref refid="class_gnuplot" kindref="compound">Gnuplot</ref></type>
        <definition>Gnuplot keycpp::Figure::g</definition>
        <argsstring></argsstring>
        <name>g</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="74" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a9471608532e10f8854ddf20b7598f2ce" prot="private" static="no" mutable="no">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; double &gt;</type>
        <definition>matrix&lt;double&gt; keycpp::Figure::colors</definition>
        <argsstring></argsstring>
        <name>colors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="75" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1ad0b2255b5ea3ae9e47eaab50c14b08a6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classkeycpp_1_1_plots" kindref="compound">Plots</ref> &gt;</type>
        <definition>std::vector&lt;Plots&gt; keycpp::Figure::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="76" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1aac35cd238a35d51822f4ba78c83f105b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::fontsize</definition>
        <argsstring></argsstring>
        <name>fontsize</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="77" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1af7b1068f17391548038b9fdcfee37504" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool keycpp::Figure::multiplot</definition>
        <argsstring></argsstring>
        <name>multiplot</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="78" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1acff322c7d1fff0d294e7e57ec7d63611" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::current_plot</definition>
        <argsstring></argsstring>
        <name>current_plot</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="79" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1aadf70a04a81caed7bc1ba30eac255c79" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::multi_rows</definition>
        <argsstring></argsstring>
        <name>multi_rows</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="80" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a4c366a20b79f8f2d99fa02588c82997b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::multi_cols</definition>
        <argsstring></argsstring>
        <name>multi_cols</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="81" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a51e4a69cfb2f249e8880d21b7b452c45" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool keycpp::Figure::final_replot</definition>
        <argsstring></argsstring>
        <name>final_replot</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="82" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a0f68e631079ba87244bf6c311a37e43a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <initializer>= 500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="83" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1adf35f91a45d7727e50c052ce50530653" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <initializer>= 375</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="84" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a3224183e0cbd0a034f83946263a7c881" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>keycpp::Figure::Figure</definition>
        <argsstring>()</argsstring>
        <name>Figure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="87" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="122" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a318799c9b423d48894395b1820c55c54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>keycpp::Figure::~Figure</definition>
        <argsstring>()</argsstring>
        <name>~Figure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="88" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="152" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a6d2444603362a7782232662410b364aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="89" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="158" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aa5761ef52842e596dca311c43920b7a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="90" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="194" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aa057f62607febd829d3e1a54801473f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="91" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="266" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a21fc5536de2cdaf6272525a28f9e4072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="92" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="628" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a2c0f7d871472571200258a5c9b95474e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="93" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="638" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a3646790552f73645bf926b1678fede40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(std::vector&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="94" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="648" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aa92130b35ce5dd9bc52e1ed4bd85682c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogx</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>semilogx</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="95" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="658" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a442655002324395b08e5511bbb02146a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogx</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>semilogx</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="96" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="664" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a849fa48f8fb7d4ee9cb205a5310f2c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogx</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>semilogx</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="97" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="670" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a8fa3aba0daf6f74bbb7c1d0553156b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogy</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>semilogy</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="98" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="676" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a15fbce90514b55af60d3819c8da2561f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogy</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>semilogy</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="99" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="682" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a52b6a651edb036721bfa6252eae0e70d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogy</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>semilogy</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="100" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="688" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aed54e550273e8e6cd4b28b1177364a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::loglog</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>loglog</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="101" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="694" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1af311b0c4a48a112abb571acc8cf9ad6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::loglog</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>loglog</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="102" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="701" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ae5dce11f219f879eaadc52c54bff35b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::loglog</definition>
        <argsstring>(std::vector&lt; U &gt; x, std::vector&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>loglog</name>
        <param>
          <type>std::vector&lt; U &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="103" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="708" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1addd610a718f021f3e6c7c94f9bc7f285" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::xlabel</definition>
        <argsstring>(std::string xlabel_text)</argsstring>
        <name>xlabel</name>
        <param>
          <type>std::string</type>
          <declname>xlabel_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="104" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="715" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aa965967db2165b001860f75fc22c9f28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::ylabel</definition>
        <argsstring>(std::string ylabel_text)</argsstring>
        <name>ylabel</name>
        <param>
          <type>std::string</type>
          <declname>ylabel_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="105" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="721" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a922bd966ed40095f0ae7fa184f9d0ada" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::title</definition>
        <argsstring>(std::string title_text)</argsstring>
        <name>title</name>
        <param>
          <type>std::string</type>
          <declname>title_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="106" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="727" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a3c036559f8ad56b099ac0b44c652225d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::grid_on</definition>
        <argsstring>()</argsstring>
        <name>grid_on</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="107" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="733" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a3736e01bc278c2c2b47e4ff046fdda0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::grid_off</definition>
        <argsstring>()</argsstring>
        <name>grid_off</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="108" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="739" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a65b80e5b67c7bbf225e3001a538a6dad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::hold_on</definition>
        <argsstring>()</argsstring>
        <name>hold_on</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="109" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="745" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ae5e5ac67e9450ea4fbf06fb3fcc6523a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::hold_off</definition>
        <argsstring>()</argsstring>
        <name>hold_off</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="110" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="751" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a59b0acbd975579bf8330849f004637fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::subplot</definition>
        <argsstring>(int mrows, int mcols, int index)</argsstring>
        <name>subplot</name>
        <param>
          <type>int</type>
          <declname>mrows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mcols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="111" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="898" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a315140182f731518bc1f6f037a12c3a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::legend</definition>
        <argsstring>(std::initializer_list&lt; std::string &gt; lst)</argsstring>
        <name>legend</name>
        <param>
          <type>std::initializer_list&lt; std::string &gt;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="112" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="757" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aa01c44e6509c7075f4f547531c39741b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::ylim</definition>
        <argsstring>(std::initializer_list&lt; double &gt; lst)</argsstring>
        <name>ylim</name>
        <param>
          <type>std::initializer_list&lt; double &gt;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="113" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="848" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ae779c53eebbee42148324bd8adfd7d01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::xlim</definition>
        <argsstring>(std::initializer_list&lt; double &gt; lst)</argsstring>
        <name>xlim</name>
        <param>
          <type>std::initializer_list&lt; double &gt;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="114" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="873" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a47cae082612e5436a6b0bc3d7f27e9d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::replot_all</definition>
        <argsstring>()</argsstring>
        <name>replot_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="115" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="777" bodyend="802"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ab8d777d1b44e242b104350093ef09543" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::setFontsize</definition>
        <argsstring>(int p_fontsize)</argsstring>
        <name>setFontsize</name>
        <param>
          <type>int</type>
          <declname>p_fontsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="116" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a6c1e59c4e8288e3880bde70db3723037" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int keycpp::Figure::getFontsize</definition>
        <argsstring>()</argsstring>
        <name>getFontsize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="117" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a7375fe8611759fda180d626f91eab510" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::set</definition>
        <argsstring>(std::string property, double val)</argsstring>
        <name>set</name>
        <param>
          <type>std::string</type>
          <declname>property</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="118" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="804" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1af82ed243d2b4f59f5e01566eb03cf9d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::set</definition>
        <argsstring>(std::string property, std::initializer_list&lt; int &gt; list)</argsstring>
        <name>set</name>
        <param>
          <type>std::string</type>
          <declname>property</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; int &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="119" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="817" bodyend="846"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="72" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="71" bodyend="120"/>
    <listofallmembers>
      <member refid="classkeycpp_1_1_figure_1a9471608532e10f8854ddf20b7598f2ce" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>colors</name></member>
      <member refid="classkeycpp_1_1_figure_1acff322c7d1fff0d294e7e57ec7d63611" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>current_plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a3224183e0cbd0a034f83946263a7c881" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>Figure</name></member>
      <member refid="classkeycpp_1_1_figure_1a51e4a69cfb2f249e8880d21b7b452c45" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>final_replot</name></member>
      <member refid="classkeycpp_1_1_figure_1aac35cd238a35d51822f4ba78c83f105b" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>fontsize</name></member>
      <member refid="classkeycpp_1_1_figure_1a090770b4d236338185a0a4bf3cdab305" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>g</name></member>
      <member refid="classkeycpp_1_1_figure_1a6c1e59c4e8288e3880bde70db3723037" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>getFontsize</name></member>
      <member refid="classkeycpp_1_1_figure_1a3736e01bc278c2c2b47e4ff046fdda0e" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>grid_off</name></member>
      <member refid="classkeycpp_1_1_figure_1a3c036559f8ad56b099ac0b44c652225d" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>grid_on</name></member>
      <member refid="classkeycpp_1_1_figure_1ae5e5ac67e9450ea4fbf06fb3fcc6523a" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>hold_off</name></member>
      <member refid="classkeycpp_1_1_figure_1a65b80e5b67c7bbf225e3001a538a6dad" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>hold_on</name></member>
      <member refid="classkeycpp_1_1_figure_1a315140182f731518bc1f6f037a12c3a5" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>legend</name></member>
      <member refid="classkeycpp_1_1_figure_1aed54e550273e8e6cd4b28b1177364a70" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>loglog</name></member>
      <member refid="classkeycpp_1_1_figure_1af311b0c4a48a112abb571acc8cf9ad6a" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>loglog</name></member>
      <member refid="classkeycpp_1_1_figure_1ae5dce11f219f879eaadc52c54bff35b4" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>loglog</name></member>
      <member refid="classkeycpp_1_1_figure_1adf35f91a45d7727e50c052ce50530653" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>m_height</name></member>
      <member refid="classkeycpp_1_1_figure_1a0f68e631079ba87244bf6c311a37e43a" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>m_width</name></member>
      <member refid="classkeycpp_1_1_figure_1a4c366a20b79f8f2d99fa02588c82997b" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>multi_cols</name></member>
      <member refid="classkeycpp_1_1_figure_1aadf70a04a81caed7bc1ba30eac255c79" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>multi_rows</name></member>
      <member refid="classkeycpp_1_1_figure_1af7b1068f17391548038b9fdcfee37504" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>multiplot</name></member>
      <member refid="classkeycpp_1_1_figure_1ad0b2255b5ea3ae9e47eaab50c14b08a6" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>p</name></member>
      <member refid="classkeycpp_1_1_figure_1a6d2444603362a7782232662410b364aa" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1aa5761ef52842e596dca311c43920b7a0" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1aa057f62607febd829d3e1a54801473f8" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a21fc5536de2cdaf6272525a28f9e4072" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a2c0f7d871472571200258a5c9b95474e" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a3646790552f73645bf926b1678fede40" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a47cae082612e5436a6b0bc3d7f27e9d9" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>replot_all</name></member>
      <member refid="classkeycpp_1_1_figure_1aa92130b35ce5dd9bc52e1ed4bd85682c" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogx</name></member>
      <member refid="classkeycpp_1_1_figure_1a442655002324395b08e5511bbb02146a" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogx</name></member>
      <member refid="classkeycpp_1_1_figure_1a849fa48f8fb7d4ee9cb205a5310f2c23" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogx</name></member>
      <member refid="classkeycpp_1_1_figure_1a8fa3aba0daf6f74bbb7c1d0553156b44" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogy</name></member>
      <member refid="classkeycpp_1_1_figure_1a15fbce90514b55af60d3819c8da2561f" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogy</name></member>
      <member refid="classkeycpp_1_1_figure_1a52b6a651edb036721bfa6252eae0e70d" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogy</name></member>
      <member refid="classkeycpp_1_1_figure_1a7375fe8611759fda180d626f91eab510" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>set</name></member>
      <member refid="classkeycpp_1_1_figure_1af82ed243d2b4f59f5e01566eb03cf9d3" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>set</name></member>
      <member refid="classkeycpp_1_1_figure_1ab8d777d1b44e242b104350093ef09543" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>setFontsize</name></member>
      <member refid="classkeycpp_1_1_figure_1a59b0acbd975579bf8330849f004637fc" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>subplot</name></member>
      <member refid="classkeycpp_1_1_figure_1a922bd966ed40095f0ae7fa184f9d0ada" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>title</name></member>
      <member refid="classkeycpp_1_1_figure_1addd610a718f021f3e6c7c94f9bc7f285" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>xlabel</name></member>
      <member refid="classkeycpp_1_1_figure_1ae779c53eebbee42148324bd8adfd7d01" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>xlim</name></member>
      <member refid="classkeycpp_1_1_figure_1aa965967db2165b001860f75fc22c9f28" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>ylabel</name></member>
      <member refid="classkeycpp_1_1_figure_1aa01c44e6509c7075f4f547531c39741b" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>ylim</name></member>
      <member refid="classkeycpp_1_1_figure_1a318799c9b423d48894395b1820c55c54" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>~Figure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
