<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="classkeycpp_1_1_figure" kind="class" prot="public">
    <compoundname>keycpp::Figure</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a090770b4d236338185a0a4bf3cdab305" prot="private" static="no" mutable="no">
        <type><ref refid="class_gnuplot" kindref="compound">Gnuplot</ref></type>
        <definition>Gnuplot keycpp::Figure::g</definition>
        <argsstring></argsstring>
        <name>g</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="118" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a9471608532e10f8854ddf20b7598f2ce" prot="private" static="no" mutable="no">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; double &gt;</type>
        <definition>matrix&lt;double&gt; keycpp::Figure::colors</definition>
        <argsstring></argsstring>
        <name>colors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="119" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a92105412a983c4bcf226458ff2f0241a" prot="private" static="no" mutable="no">
        <type><ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; <ref refid="classkeycpp_1_1_plots" kindref="compound">Plots</ref> &gt;</type>
        <definition>vector_k&lt;Plots&gt; keycpp::Figure::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="120" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1ab34d591911869c64adefd8d62b856fb2" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t keycpp::Figure::fontsize</definition>
        <argsstring></argsstring>
        <name>fontsize</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="121" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a2e137931dead3711f34c945e47f26342" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string keycpp::Figure::fontname</definition>
        <argsstring></argsstring>
        <name>fontname</name>
        <initializer>= &quot;Helvetica&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="122" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1af7b1068f17391548038b9fdcfee37504" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool keycpp::Figure::multiplot</definition>
        <argsstring></argsstring>
        <name>multiplot</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="123" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1af1b97d2d304add0c783b85c0be708a4e" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t keycpp::Figure::current_plot</definition>
        <argsstring></argsstring>
        <name>current_plot</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="124" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1aadf70a04a81caed7bc1ba30eac255c79" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::multi_rows</definition>
        <argsstring></argsstring>
        <name>multi_rows</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="125" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a4c366a20b79f8f2d99fa02588c82997b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int keycpp::Figure::multi_cols</definition>
        <argsstring></argsstring>
        <name>multi_cols</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="126" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a51e4a69cfb2f249e8880d21b7b452c45" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool keycpp::Figure::final_replot</definition>
        <argsstring></argsstring>
        <name>final_replot</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="127" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a53af620de75d87adce205a76ccbdc860" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t keycpp::Figure::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <initializer>= 560</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="128" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1a7802dbc7639870dc650ab1ed29afbcce" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t keycpp::Figure::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <initializer>= 420</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="129" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1ae8a318c5edf3025eaa7154d1839f489d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string keycpp::Figure::term</definition>
        <argsstring></argsstring>
        <name>term</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="130" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1acd006fa122b634b92ff43427080dfd70" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string keycpp::Figure::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="131" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_figure_1af12e55b9d98075e13e9a11eac36abe42" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool keycpp::Figure::remove_temp_files</definition>
        <argsstring></argsstring>
        <name>remove_temp_files</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="132" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a3224183e0cbd0a034f83946263a7c881" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>keycpp::Figure::Figure</definition>
        <argsstring>()</argsstring>
        <name>Figure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="135" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="184" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a318799c9b423d48894395b1820c55c54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>keycpp::Figure::~Figure</definition>
        <argsstring>()</argsstring>
        <name>~Figure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="136" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="214" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a5a062460f59124050db83df4e4a40113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; U, 1 &gt; x, matrix&lt; T, 1 &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="137" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="225" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ae408abfc6e8afe57f03a4a27f85f8aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; U, 1 &gt; x, matrix&lt; T, 1 &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="138" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="261" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a0a4b5dccade75ce6ccf12f44d2fb5073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; U, 1 &gt; x, matrix&lt; T, 1 &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="139" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="333" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a926ff8dedfb7f0a55b764758d7282d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T, 1 &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="140" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="752" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a699f1514e3480e10304d5fc90c4ba43a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T, 1 &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="141" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="762" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a1850a24b9d1f6cccc0dd759822344ba8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T, 1 &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="142" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="772" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a88e55b3a2c1b05c7c7fe2e6785e11f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="143" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="797" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a2e6daf7811c3d34fabb83bc8368e1e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="144" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="806" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a39dd5e2d5e6acb6db99ac75476ea777a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="145" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="815" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a35987b305f55c3b8c612fbaec2223060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; x, matrix&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="146" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="824" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a9000f7c76f21a37d4c70bee3103fe623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; x, matrix&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="147" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="837" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a79f823ad4b62e20a85c9f1270e65fb01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; x, matrix&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="148" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="850" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a0988a3407d023ed5cdae56ffdb22d8fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; x, matrix&lt; T, 1 &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="149" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="932" bodyend="953"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aa1e56a0aff841b0ba7d3c3a56768e05b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; x, matrix&lt; T, 1 &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="150" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="955" bodyend="976"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a1e96644138f10db60f0f0be9272d5004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T &gt; x, matrix&lt; T, 1 &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="151" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="978" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a6bda5ff8217267ad27af53d2bd3e0933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T, 1 &gt; x, matrix&lt; T &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="152" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="863" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a2e927307a66214a443fd30576ebb8830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T, 1 &gt; x, matrix&lt; T &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="153" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="886" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a2ce4e8bb56d156982d108657b21a8067" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::plot</definition>
        <argsstring>(matrix&lt; T, 1 &gt; x, matrix&lt; T &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="154" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="909" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a60684bff54e496733aff380036e5d009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogx</definition>
        <argsstring>(matrix&lt; U, 1 &gt; x, matrix&lt; T, 1 &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>semilogx</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="155" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1001" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ad2e51044ad2b47b13249553cb62ff549" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogx</definition>
        <argsstring>(matrix&lt; U, 1 &gt; x, matrix&lt; T, 1 &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>semilogx</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="156" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1007" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a475b3fd86dceb24c4b54ba37d3322e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogx</definition>
        <argsstring>(matrix&lt; U, 1 &gt; x, matrix&lt; T, 1 &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>semilogx</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="157" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1013" bodyend="1017"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a56ff722f72d5bcd0647a958f4fa6b126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogy</definition>
        <argsstring>(matrix&lt; U, 1 &gt; x, matrix&lt; T, 1 &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>semilogy</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="158" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1019" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a3bca3cb378226263f7d12ec958a0b04d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogy</definition>
        <argsstring>(matrix&lt; U, 1 &gt; x, matrix&lt; T, 1 &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>semilogy</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="159" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1025" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1af5423942c7365262ea4d5d49fb677ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::semilogy</definition>
        <argsstring>(matrix&lt; U, 1 &gt; x, matrix&lt; T, 1 &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>semilogy</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="160" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1031" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1af6214a2be48dc42ad4f2888ba3491284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::loglog</definition>
        <argsstring>(matrix&lt; U, 1 &gt; x, matrix&lt; T, 1 &gt; y, std::string format, std::string property1, double val1)</argsstring>
        <name>loglog</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="161" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1037" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a3cb4cdb5bcc2228492dd7577bc774b34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::loglog</definition>
        <argsstring>(matrix&lt; U, 1 &gt; x, matrix&lt; T, 1 &gt; y, std::string format, std::string property1, double val1, std::string property2, double val2)</argsstring>
        <name>loglog</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>format</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val1</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="162" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1044" bodyend="1049"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a61dae76a8b73c0bf1af686692c3d57ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void keycpp::Figure::loglog</definition>
        <argsstring>(matrix&lt; U, 1 &gt; x, matrix&lt; T, 1 &gt; y, std::string arguments=&quot;&quot;, double val=-1, double lw=2, double ps=1.5, std::string legend_entry=&quot;&quot;)</argsstring>
        <name>loglog</name>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, 1 &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 1 &gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>arguments</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lw</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>double</type>
          <declname>ps</declname>
          <defval>1.5</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>legend_entry</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="163" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1051" bodyend="1056"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1addd610a718f021f3e6c7c94f9bc7f285" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::xlabel</definition>
        <argsstring>(std::string xlabel_text)</argsstring>
        <name>xlabel</name>
        <param>
          <type>std::string</type>
          <declname>xlabel_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="164" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1058" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aa965967db2165b001860f75fc22c9f28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::ylabel</definition>
        <argsstring>(std::string ylabel_text)</argsstring>
        <name>ylabel</name>
        <param>
          <type>std::string</type>
          <declname>ylabel_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="165" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1064" bodyend="1068"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a922bd966ed40095f0ae7fa184f9d0ada" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::title</definition>
        <argsstring>(std::string title_text)</argsstring>
        <name>title</name>
        <param>
          <type>std::string</type>
          <declname>title_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="166" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1070" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a3c036559f8ad56b099ac0b44c652225d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::grid_on</definition>
        <argsstring>()</argsstring>
        <name>grid_on</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="167" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1076" bodyend="1080"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a3736e01bc278c2c2b47e4ff046fdda0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::grid_off</definition>
        <argsstring>()</argsstring>
        <name>grid_off</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="168" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1082" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a65b80e5b67c7bbf225e3001a538a6dad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::hold_on</definition>
        <argsstring>()</argsstring>
        <name>hold_on</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="169" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1088" bodyend="1092"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ae5e5ac67e9450ea4fbf06fb3fcc6523a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::hold_off</definition>
        <argsstring>()</argsstring>
        <name>hold_off</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="170" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1094" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a6d7d8120a0301c002bf40b46fd8b560d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::subplot</definition>
        <argsstring>(size_t mrows, size_t mcols, size_t index)</argsstring>
        <name>subplot</name>
        <param>
          <type>size_t</type>
          <declname>mrows</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>mcols</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="171" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1413" bodyend="1441"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a2b5a0aae355a33024d2f6c51a8754786" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::legend</definition>
        <argsstring>(std::initializer_list&lt; std::string &gt; lst, std::string property1=&quot;&quot;, std::string val1=&quot;&quot;, std::string property2=&quot;&quot;, std::string val2=&quot;&quot;)</argsstring>
        <name>legend</name>
        <param>
          <type>std::initializer_list&lt; std::string &gt;</type>
          <declname>lst</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>property1</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>val1</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>property2</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>val2</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="172" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1100" bodyend="1276"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1aa01c44e6509c7075f4f547531c39741b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::ylim</definition>
        <argsstring>(std::initializer_list&lt; double &gt; lst)</argsstring>
        <name>ylim</name>
        <param>
          <type>std::initializer_list&lt; double &gt;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="173" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1363" bodyend="1386"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ae779c53eebbee42148324bd8adfd7d01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::xlim</definition>
        <argsstring>(std::initializer_list&lt; double &gt; lst)</argsstring>
        <name>xlim</name>
        <param>
          <type>std::initializer_list&lt; double &gt;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="174" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1388" bodyend="1411"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a47cae082612e5436a6b0bc3d7f27e9d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::replot_all</definition>
        <argsstring>()</argsstring>
        <name>replot_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="175" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1279" bodyend="1304"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a38aea1e2c4cd849622e57ed346ec52f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::setFontsize</definition>
        <argsstring>(size_t p_fontsize)</argsstring>
        <name>setFontsize</name>
        <param>
          <type>size_t</type>
          <declname>p_fontsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="176" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1af808550cb627ddbd37fad174cfed2bef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t keycpp::Figure::getFontsize</definition>
        <argsstring>()</argsstring>
        <name>getFontsize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="177" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a7375fe8611759fda180d626f91eab510" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::set</definition>
        <argsstring>(std::string property, double val)</argsstring>
        <name>set</name>
        <param>
          <type>std::string</type>
          <declname>property</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="178" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1306" bodyend="1317"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1a1f6c04d0276c0419c3feb974639fb7c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::set</definition>
        <argsstring>(std::string property, std::string val)</argsstring>
        <name>set</name>
        <param>
          <type>std::string</type>
          <declname>property</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="179" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1319" bodyend="1330"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1ac6d1881c6dc996eb508adf2126905d38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::print</definition>
        <argsstring>(std::string pterm, std::string pfilename)</argsstring>
        <name>print</name>
        <param>
          <type>std::string</type>
          <declname>pterm</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>pfilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="180" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_figure_1abceb69bfb4476f2c9423f248bc04a6c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::Figure::set</definition>
        <argsstring>(std::string property, std::initializer_list&lt; size_t &gt; list)</argsstring>
        <name>set</name>
        <param>
          <type>std::string</type>
          <declname>property</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; size_t &gt;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="181" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="1332" bodyend="1361"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/media/Storage/Research/open_source/keycpp/include/Figure.h" line="116" bodyfile="/media/Storage/Research/open_source/keycpp/include/Figure.h" bodystart="115" bodyend="182"/>
    <listofallmembers>
      <member refid="classkeycpp_1_1_figure_1a9471608532e10f8854ddf20b7598f2ce" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>colors</name></member>
      <member refid="classkeycpp_1_1_figure_1af1b97d2d304add0c783b85c0be708a4e" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>current_plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a3224183e0cbd0a034f83946263a7c881" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>Figure</name></member>
      <member refid="classkeycpp_1_1_figure_1acd006fa122b634b92ff43427080dfd70" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>filename</name></member>
      <member refid="classkeycpp_1_1_figure_1a51e4a69cfb2f249e8880d21b7b452c45" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>final_replot</name></member>
      <member refid="classkeycpp_1_1_figure_1a2e137931dead3711f34c945e47f26342" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>fontname</name></member>
      <member refid="classkeycpp_1_1_figure_1ab34d591911869c64adefd8d62b856fb2" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>fontsize</name></member>
      <member refid="classkeycpp_1_1_figure_1a090770b4d236338185a0a4bf3cdab305" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>g</name></member>
      <member refid="classkeycpp_1_1_figure_1af808550cb627ddbd37fad174cfed2bef" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>getFontsize</name></member>
      <member refid="classkeycpp_1_1_figure_1a3736e01bc278c2c2b47e4ff046fdda0e" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>grid_off</name></member>
      <member refid="classkeycpp_1_1_figure_1a3c036559f8ad56b099ac0b44c652225d" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>grid_on</name></member>
      <member refid="classkeycpp_1_1_figure_1ae5e5ac67e9450ea4fbf06fb3fcc6523a" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>hold_off</name></member>
      <member refid="classkeycpp_1_1_figure_1a65b80e5b67c7bbf225e3001a538a6dad" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>hold_on</name></member>
      <member refid="classkeycpp_1_1_figure_1a2b5a0aae355a33024d2f6c51a8754786" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>legend</name></member>
      <member refid="classkeycpp_1_1_figure_1af6214a2be48dc42ad4f2888ba3491284" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>loglog</name></member>
      <member refid="classkeycpp_1_1_figure_1a3cb4cdb5bcc2228492dd7577bc774b34" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>loglog</name></member>
      <member refid="classkeycpp_1_1_figure_1a61dae76a8b73c0bf1af686692c3d57ae" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>loglog</name></member>
      <member refid="classkeycpp_1_1_figure_1a7802dbc7639870dc650ab1ed29afbcce" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>m_height</name></member>
      <member refid="classkeycpp_1_1_figure_1a53af620de75d87adce205a76ccbdc860" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>m_width</name></member>
      <member refid="classkeycpp_1_1_figure_1a4c366a20b79f8f2d99fa02588c82997b" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>multi_cols</name></member>
      <member refid="classkeycpp_1_1_figure_1aadf70a04a81caed7bc1ba30eac255c79" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>multi_rows</name></member>
      <member refid="classkeycpp_1_1_figure_1af7b1068f17391548038b9fdcfee37504" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>multiplot</name></member>
      <member refid="classkeycpp_1_1_figure_1a92105412a983c4bcf226458ff2f0241a" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>p</name></member>
      <member refid="classkeycpp_1_1_figure_1a5a062460f59124050db83df4e4a40113" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1ae408abfc6e8afe57f03a4a27f85f8aa4" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a0a4b5dccade75ce6ccf12f44d2fb5073" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a926ff8dedfb7f0a55b764758d7282d4a" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a699f1514e3480e10304d5fc90c4ba43a" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a1850a24b9d1f6cccc0dd759822344ba8" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a88e55b3a2c1b05c7c7fe2e6785e11f58" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a2e6daf7811c3d34fabb83bc8368e1e7c" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a39dd5e2d5e6acb6db99ac75476ea777a" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a35987b305f55c3b8c612fbaec2223060" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a9000f7c76f21a37d4c70bee3103fe623" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a79f823ad4b62e20a85c9f1270e65fb01" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a0988a3407d023ed5cdae56ffdb22d8fe" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1aa1e56a0aff841b0ba7d3c3a56768e05b" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a1e96644138f10db60f0f0be9272d5004" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a6bda5ff8217267ad27af53d2bd3e0933" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a2e927307a66214a443fd30576ebb8830" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1a2ce4e8bb56d156982d108657b21a8067" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>plot</name></member>
      <member refid="classkeycpp_1_1_figure_1ac6d1881c6dc996eb508adf2126905d38" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>print</name></member>
      <member refid="classkeycpp_1_1_figure_1af12e55b9d98075e13e9a11eac36abe42" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>remove_temp_files</name></member>
      <member refid="classkeycpp_1_1_figure_1a47cae082612e5436a6b0bc3d7f27e9d9" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>replot_all</name></member>
      <member refid="classkeycpp_1_1_figure_1a60684bff54e496733aff380036e5d009" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogx</name></member>
      <member refid="classkeycpp_1_1_figure_1ad2e51044ad2b47b13249553cb62ff549" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogx</name></member>
      <member refid="classkeycpp_1_1_figure_1a475b3fd86dceb24c4b54ba37d3322e2c" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogx</name></member>
      <member refid="classkeycpp_1_1_figure_1a56ff722f72d5bcd0647a958f4fa6b126" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogy</name></member>
      <member refid="classkeycpp_1_1_figure_1a3bca3cb378226263f7d12ec958a0b04d" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogy</name></member>
      <member refid="classkeycpp_1_1_figure_1af5423942c7365262ea4d5d49fb677ee4" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>semilogy</name></member>
      <member refid="classkeycpp_1_1_figure_1a7375fe8611759fda180d626f91eab510" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>set</name></member>
      <member refid="classkeycpp_1_1_figure_1a1f6c04d0276c0419c3feb974639fb7c2" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>set</name></member>
      <member refid="classkeycpp_1_1_figure_1abceb69bfb4476f2c9423f248bc04a6c8" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>set</name></member>
      <member refid="classkeycpp_1_1_figure_1a38aea1e2c4cd849622e57ed346ec52f5" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>setFontsize</name></member>
      <member refid="classkeycpp_1_1_figure_1a6d7d8120a0301c002bf40b46fd8b560d" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>subplot</name></member>
      <member refid="classkeycpp_1_1_figure_1ae8a318c5edf3025eaa7154d1839f489d" prot="private" virt="non-virtual"><scope>keycpp::Figure</scope><name>term</name></member>
      <member refid="classkeycpp_1_1_figure_1a922bd966ed40095f0ae7fa184f9d0ada" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>title</name></member>
      <member refid="classkeycpp_1_1_figure_1addd610a718f021f3e6c7c94f9bc7f285" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>xlabel</name></member>
      <member refid="classkeycpp_1_1_figure_1ae779c53eebbee42148324bd8adfd7d01" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>xlim</name></member>
      <member refid="classkeycpp_1_1_figure_1aa965967db2165b001860f75fc22c9f28" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>ylabel</name></member>
      <member refid="classkeycpp_1_1_figure_1aa01c44e6509c7075f4f547531c39741b" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>ylim</name></member>
      <member refid="classkeycpp_1_1_figure_1a318799c9b423d48894395b1820c55c54" prot="public" virt="non-virtual"><scope>keycpp::Figure</scope><name>~Figure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
