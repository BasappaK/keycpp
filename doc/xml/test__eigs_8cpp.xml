<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="test__eigs_8cpp" kind="file">
    <compoundname>test_eigs.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes refid="keycpp_8h" local="yes">keycpp.h</includes>
    <incdepgraph>
      <node id="540">
        <label>list</label>
      </node>
      <node id="657">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparsePermutation.h</label>
      </node>
      <node id="646">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseMatrixBase.h</label>
      </node>
      <node id="631">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CoreIterators.h</label>
      </node>
      <node id="519">
        <label>stdarg.h</label>
      </node>
      <node id="551">
        <label>functional</label>
      </node>
      <node id="508">
        <label>iomanip</label>
      </node>
      <node id="675">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/misc/Solve.h</label>
      </node>
      <node id="683">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLUImpl.h</label>
      </node>
      <node id="611">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ProductBase.h</label>
      </node>
      <node id="662">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseProduct.h</label>
      </node>
      <node id="517">
        <label>limits</label>
      </node>
      <node id="593">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Stride.h</label>
      </node>
      <node id="645">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseUtil.h</label>
      </node>
      <node id="579">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ForceAlignedAccess.h</label>
      </node>
      <node id="674">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseCholesky</label>
      </node>
      <node id="606">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Fuzzy.h</label>
      </node>
      <node id="543">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseCore</label>
      </node>
      <node id="556">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/ForwardDeclarations.h</label>
      </node>
      <node id="567">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DenseBase.h</label>
      </node>
      <node id="521">
        <label>iterator</label>
      </node>
      <node id="600">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Diagonal.h</label>
      </node>
      <node id="569">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/MatrixBase.h</label>
      </node>
      <node id="669">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/OrderingMethods</label>
      </node>
      <node id="628">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularSolverMatrix.h</label>
      </node>
      <node id="694">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h</label>
      </node>
      <node id="640">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h</label>
      </node>
      <node id="641">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ArrayWrapper.h</label>
      </node>
      <node id="547">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/MKL_support.h</label>
      </node>
      <node id="505">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="622">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h</label>
      </node>
      <node id="573">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/MatrixCwiseBinaryOps.h</label>
      </node>
      <node id="604">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Redux.h</label>
      </node>
      <node id="687">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_relax_snode.h</label>
      </node>
      <node id="619">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h</label>
      </node>
      <node id="626">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularMatrixVector.h</label>
      </node>
      <node id="506">
        <label>keycpp.h</label>
        <link refid="keycpp_8h"/>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
        <childnode refid="531" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
        <childnode refid="541" relation="include">
        </childnode>
        <childnode refid="543" relation="include">
        </childnode>
        <childnode refid="544" relation="include">
        </childnode>
        <childnode refid="545" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
        <childnode refid="547" relation="include">
        </childnode>
        <childnode refid="548" relation="include">
        </childnode>
        <childnode refid="549" relation="include">
        </childnode>
        <childnode refid="539" relation="include">
        </childnode>
        <childnode refid="550" relation="include">
        </childnode>
        <childnode refid="551" relation="include">
        </childnode>
        <childnode refid="552" relation="include">
        </childnode>
        <childnode refid="553" relation="include">
        </childnode>
        <childnode refid="554" relation="include">
        </childnode>
        <childnode refid="555" relation="include">
        </childnode>
        <childnode refid="556" relation="include">
        </childnode>
        <childnode refid="557" relation="include">
        </childnode>
        <childnode refid="558" relation="include">
        </childnode>
        <childnode refid="559" relation="include">
        </childnode>
        <childnode refid="560" relation="include">
        </childnode>
        <childnode refid="561" relation="include">
        </childnode>
        <childnode refid="562" relation="include">
        </childnode>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="564" relation="include">
        </childnode>
        <childnode refid="565" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="567" relation="include">
        </childnode>
        <childnode refid="568" relation="include">
        </childnode>
        <childnode refid="569" relation="include">
        </childnode>
        <childnode refid="570" relation="include">
        </childnode>
        <childnode refid="571" relation="include">
        </childnode>
        <childnode refid="572" relation="include">
        </childnode>
        <childnode refid="573" relation="include">
        </childnode>
        <childnode refid="574" relation="include">
        </childnode>
        <childnode refid="575" relation="include">
        </childnode>
        <childnode refid="576" relation="include">
        </childnode>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="578" relation="include">
        </childnode>
        <childnode refid="579" relation="include">
        </childnode>
        <childnode refid="580" relation="include">
        </childnode>
        <childnode refid="581" relation="include">
        </childnode>
        <childnode refid="582" relation="include">
        </childnode>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="584" relation="include">
        </childnode>
        <childnode refid="585" relation="include">
        </childnode>
        <childnode refid="586" relation="include">
        </childnode>
        <childnode refid="587" relation="include">
        </childnode>
        <childnode refid="588" relation="include">
        </childnode>
        <childnode refid="589" relation="include">
        </childnode>
        <childnode refid="590" relation="include">
        </childnode>
        <childnode refid="591" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
        <childnode refid="593" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="609" relation="include">
        </childnode>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="611" relation="include">
        </childnode>
        <childnode refid="612" relation="include">
        </childnode>
        <childnode refid="613" relation="include">
        </childnode>
        <childnode refid="614" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="617" relation="include">
        </childnode>
        <childnode refid="618" relation="include">
        </childnode>
        <childnode refid="619" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
        <childnode refid="621" relation="include">
        </childnode>
        <childnode refid="622" relation="include">
        </childnode>
        <childnode refid="623" relation="include">
        </childnode>
        <childnode refid="624" relation="include">
        </childnode>
        <childnode refid="625" relation="include">
        </childnode>
        <childnode refid="626" relation="include">
        </childnode>
        <childnode refid="627" relation="include">
        </childnode>
        <childnode refid="628" relation="include">
        </childnode>
        <childnode refid="629" relation="include">
        </childnode>
        <childnode refid="630" relation="include">
        </childnode>
        <childnode refid="631" relation="include">
        </childnode>
        <childnode refid="632" relation="include">
        </childnode>
        <childnode refid="633" relation="include">
        </childnode>
        <childnode refid="634" relation="include">
        </childnode>
        <childnode refid="635" relation="include">
        </childnode>
        <childnode refid="636" relation="include">
        </childnode>
        <childnode refid="637" relation="include">
        </childnode>
        <childnode refid="638" relation="include">
        </childnode>
        <childnode refid="639" relation="include">
        </childnode>
        <childnode refid="640" relation="include">
        </childnode>
        <childnode refid="641" relation="include">
        </childnode>
        <childnode refid="642" relation="include">
        </childnode>
        <childnode refid="643" relation="include">
        </childnode>
        <childnode refid="644" relation="include">
        </childnode>
        <childnode refid="645" relation="include">
        </childnode>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="647" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="650" relation="include">
        </childnode>
        <childnode refid="651" relation="include">
        </childnode>
        <childnode refid="652" relation="include">
        </childnode>
        <childnode refid="653" relation="include">
        </childnode>
        <childnode refid="654" relation="include">
        </childnode>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="657" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="660" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
        <childnode refid="663" relation="include">
        </childnode>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
        <childnode refid="694" relation="include">
        </childnode>
        <childnode refid="695" relation="include">
        </childnode>
        <childnode refid="696" relation="include">
        </childnode>
        <childnode refid="697" relation="include">
        </childnode>
        <childnode refid="698" relation="include">
        </childnode>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="700" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
        <childnode refid="703" relation="include">
        </childnode>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="705" relation="include">
        </childnode>
        <childnode refid="706" relation="include">
        </childnode>
      </node>
      <node id="682">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h</label>
      </node>
      <node id="526">
        <label>stdlib.h</label>
      </node>
      <node id="630">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/BandMatrix.h</label>
      </node>
      <node id="555">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Constants.h</label>
      </node>
      <node id="681">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_Structs.h</label>
      </node>
      <node id="576">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/BlasUtil.h</label>
      </node>
      <node id="623">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h</label>
      </node>
      <node id="685">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_Memory.h</label>
      </node>
      <node id="651">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseVector.h</label>
      </node>
      <node id="568">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/BlockMethods.h</label>
      </node>
      <node id="512">
        <label>cmath</label>
      </node>
      <node id="550">
        <label>cassert</label>
      </node>
      <node id="566">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DenseCoeffsBase.h</label>
      </node>
      <node id="565">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Functors.h</label>
      </node>
      <node id="522">
        <label>stdexcept</label>
      </node>
      <node id="692">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h</label>
      </node>
      <node id="581">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/NoAlias.h</label>
      </node>
      <node id="643">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/ReenableStupidWarnings.h</label>
      </node>
      <node id="564">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/arch/Default/Settings.h</label>
      </node>
      <node id="689">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h</label>
      </node>
      <node id="511">
        <label>string</label>
      </node>
      <node id="559">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/XprHelper.h</label>
      </node>
      <node id="563">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/GenericPacketMath.h</label>
      </node>
      <node id="644">
        <label>map</label>
      </node>
      <node id="661">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h</label>
      </node>
      <node id="601">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DiagonalProduct.h</label>
      </node>
      <node id="618">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralMatrixVector.h</label>
      </node>
      <node id="700">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/IterativeLinearSolvers</label>
      </node>
      <node id="649">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseMatrix.h</label>
      </node>
      <node id="701">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h</label>
      </node>
      <node id="664">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h</label>
      </node>
      <node id="537">
        <label>fstream</label>
      </node>
      <node id="699">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseQR/SparseQR.h</label>
      </node>
      <node id="520">
        <label>vector_k.h</label>
        <link refid="vector__k_8h_source"/>
        <childnode refid="521" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
      </node>
      <node id="636">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Replicate.h</label>
      </node>
      <node id="586">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseUnaryOp.h</label>
      </node>
      <node id="582">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/PlainObjectBase.h</label>
      </node>
      <node id="560">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Memory.h</label>
      </node>
      <node id="650">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/MappedSparseMatrix.h</label>
      </node>
      <node id="530">
        <label>limits.h</label>
      </node>
      <node id="635">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Random.h</label>
      </node>
      <node id="629">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularSolverVector.h</label>
      </node>
      <node id="616">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/Parallelizer.h</label>
      </node>
      <node id="688">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_pivotL.h</label>
      </node>
      <node id="557">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Meta.h</label>
      </node>
      <node id="597">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Ref.h</label>
      </node>
      <node id="705">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h</label>
      </node>
      <node id="561">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/NumTraits.h</label>
      </node>
      <node id="542">
        <label>Eigen/Sparse</label>
      </node>
      <node id="602">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/PermutationMatrix.h</label>
      </node>
      <node id="666">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h</label>
      </node>
      <node id="653">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseTranspose.h</label>
      </node>
      <node id="638">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ArrayBase.h</label>
      </node>
      <node id="702">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h</label>
      </node>
      <node id="615">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h</label>
      </node>
      <node id="655">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h</label>
      </node>
      <node id="577">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DenseStorage.h</label>
      </node>
      <node id="686">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h</label>
      </node>
      <node id="588">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseUnaryView.h</label>
      </node>
      <node id="514">
        <label>boost/range.hpp</label>
      </node>
      <node id="614">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/SelfAdjointView.h</label>
      </node>
      <node id="617">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/CoeffBasedProduct.h</label>
      </node>
      <node id="529">
        <label>string.h</label>
      </node>
      <node id="663">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseDenseProduct.h</label>
      </node>
      <node id="562">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/MathFunctions.h</label>
      </node>
      <node id="599">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DiagonalMatrix.h</label>
      </node>
      <node id="538">
        <label>cstdio</label>
      </node>
      <node id="634">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/VectorwiseOp.h</label>
      </node>
      <node id="684">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseColEtree.h</label>
      </node>
      <node id="658">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseRedux.h</label>
      </node>
      <node id="570">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h</label>
      </node>
      <node id="659">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseFuzzy.h</label>
      </node>
      <node id="518">
        <label>ctime</label>
      </node>
      <node id="584">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Array.h</label>
      </node>
      <node id="612">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/GeneralProduct.h</label>
      </node>
      <node id="698">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseQR</label>
      </node>
      <node id="610">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Flagged.h</label>
      </node>
      <node id="678">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h</label>
      </node>
      <node id="627">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h</label>
      </node>
      <node id="510">
        <label>vector</label>
      </node>
      <node id="546">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Macros.h</label>
      </node>
      <node id="558">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/StaticAssert.h</label>
      </node>
      <node id="637">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Reverse.h</label>
      </node>
      <node id="608">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Swap.h</label>
      </node>
      <node id="693">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_column_bmod.h</label>
      </node>
      <node id="515">
        <label>utility</label>
      </node>
      <node id="647">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/CompressedStorage.h</label>
      </node>
      <node id="533">
        <label>sstream</label>
      </node>
      <node id="590">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Dot.h</label>
      </node>
      <node id="665">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseTriangularView.h</label>
      </node>
      <node id="504">
        <label>test_eigs.cpp</label>
        <link refid="test_eigs.cpp"/>
        <childnode refid="505" relation="include">
        </childnode>
        <childnode refid="506" relation="include">
        </childnode>
      </node>
      <node id="591">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/StableNorm.h</label>
      </node>
      <node id="679">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseLU</label>
      </node>
      <node id="541">
        <label>SparseMatrix.h</label>
        <link refid="_sparse_matrix_8h_source"/>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="542" relation="include">
        </childnode>
      </node>
      <node id="532">
        <label>Figure.h</label>
        <link refid="_figure_8h_source"/>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="533" relation="include">
        </childnode>
        <childnode refid="534" relation="include">
        </childnode>
        <childnode refid="535" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="536" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
      </node>
      <node id="625">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointRank2Update.h</label>
      </node>
      <node id="513">
        <label>boost/numeric/odeint.hpp</label>
      </node>
      <node id="696">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_Utils.h</label>
      </node>
      <node id="639">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h</label>
      </node>
      <node id="677">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h</label>
      </node>
      <node id="531">
        <label>Spline.h</label>
        <link refid="_spline_8h_source"/>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
      </node>
      <node id="528">
        <label>math.h</label>
      </node>
      <node id="603">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Transpositions.h</label>
      </node>
      <node id="672">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/OrderingMethods/Ordering.h</label>
      </node>
      <node id="552">
        <label>iosfwd</label>
      </node>
      <node id="548">
        <label>cerrno</label>
      </node>
      <node id="539">
        <label>cstdlib</label>
      </node>
      <node id="587">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseNullaryOp.h</label>
      </node>
      <node id="545">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/DisableStupidWarnings.h</label>
      </node>
      <node id="621">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h</label>
      </node>
      <node id="620">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/SolveTriangular.h</label>
      </node>
      <node id="507">
        <label>iostream</label>
      </node>
      <node id="571">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/CommonCwiseBinaryOps.h</label>
      </node>
      <node id="549">
        <label>cstddef</label>
      </node>
      <node id="595">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Block.h</label>
      </node>
      <node id="691">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_panel_bmod.h</label>
      </node>
      <node id="690">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_kernel_bmod.h</label>
      </node>
      <node id="596">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/VectorBlock.h</label>
      </node>
      <node id="583">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Matrix.h</label>
      </node>
      <node id="654">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h</label>
      </node>
      <node id="697">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU.h</label>
      </node>
      <node id="554">
        <label>climits</label>
      </node>
      <node id="536">
        <label>gnuplot_i.h</label>
        <link refid="gnuplot__i_8h_source"/>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="537" relation="include">
        </childnode>
        <childnode refid="533" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="538" relation="include">
        </childnode>
        <childnode refid="539" relation="include">
        </childnode>
        <childnode refid="540" relation="include">
        </childnode>
      </node>
      <node id="706">
        <label>znaupd.h</label>
        <link refid="znaupd_8h_source"/>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="542" relation="include">
        </childnode>
      </node>
      <node id="575">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Assign.h</label>
      </node>
      <node id="592">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/MapBase.h</label>
      </node>
      <node id="605">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Visitor.h</label>
      </node>
      <node id="668">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseView.h</label>
      </node>
      <node id="695">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_pruneL.h</label>
      </node>
      <node id="534">
        <label>chrono</label>
      </node>
      <node id="660">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h</label>
      </node>
      <node id="598">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Transpose.h</label>
      </node>
      <node id="607">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/IO.h</label>
      </node>
      <node id="633">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Select.h</label>
      </node>
      <node id="703">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h</label>
      </node>
      <node id="544">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/Core</label>
      </node>
      <node id="632">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/BooleanRedux.h</label>
      </node>
      <node id="523">
        <label>Matrix.h</label>
        <link refid="_matrix_8h_source"/>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
      </node>
      <node id="585">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseBinaryOp.h</label>
      </node>
      <node id="670">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/OrderingMethods/Amd.h</label>
      </node>
      <node id="535">
        <label>thread</label>
      </node>
      <node id="572">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/MatrixCwiseUnaryOps.h</label>
      </node>
      <node id="648">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/AmbiVector.h</label>
      </node>
      <node id="525">
        <label>kiss_fft.h</label>
        <link refid="kiss__fft_8h_source"/>
        <childnode refid="526" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
      </node>
      <node id="613">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/TriangularMatrix.h</label>
      </node>
      <node id="704">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h</label>
      </node>
      <node id="673">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h</label>
      </node>
      <node id="509">
        <label>complex</label>
      </node>
      <node id="676">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/misc/SparseSolve.h</label>
      </node>
      <node id="516">
        <label>algorithm</label>
      </node>
      <node id="578">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/NestByValue.h</label>
      </node>
      <node id="642">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/GlobalFunctions.h</label>
      </node>
      <node id="527">
        <label>stdio.h</label>
      </node>
      <node id="656">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseDot.h</label>
      </node>
      <node id="574">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/EigenBase.h</label>
      </node>
      <node id="553">
        <label>cstring</label>
      </node>
      <node id="589">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/SelfCwiseBinaryOp.h</label>
      </node>
      <node id="624">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointProduct.h</label>
      </node>
      <node id="609">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CommaInitializer.h</label>
      </node>
      <node id="580">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ReturnByValue.h</label>
      </node>
      <node id="667">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/TriangularSolver.h</label>
      </node>
      <node id="594">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Map.h</label>
      </node>
      <node id="524">
        <label>_kiss_fft_guts.h</label>
        <link refid="__kiss__fft__guts_8h_source"/>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="530" relation="include">
        </childnode>
      </node>
      <node id="680">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h</label>
      </node>
      <node id="671">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/NonMPL2.h</label>
      </node>
      <node id="652">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseBlock.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__eigs_8cpp_1a22fc035eb3c2f10f15b350893ce76df7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(eigs_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>eigs_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/testing/test_eigs.cpp" line="6" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/testing/test_eigs.cpp" bodystart="6" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keycpp_8h" kindref="compound">keycpp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">BOOST_AUTO_TEST_SUITE(KeyCpp_Unit_Testing)</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">BOOST_AUTO_TEST_CASE(eigs_test)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>1e-13;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>Evecs,<sp/>Evals;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>i<sp/>=<sp/>std::complex&lt;double&gt;(0.0,1.0);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>A<sp/>=<sp/><ref refid="namespacekeycpp_1a5ef5c1f5951e8182a7c4ec9612f3f7e1" kindref="member" tooltip="Returns a random double between 0 and 1.0. ">keycpp::rand</ref>(n,n)<sp/>+<sp/>i*<ref refid="namespacekeycpp_1a5ef5c1f5951e8182a7c4ec9612f3f7e1" kindref="member" tooltip="Returns a random double between 0 and 1.0. ">keycpp::rand</ref>(n,n);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nev<sp/>=<sp/>3;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>values<sp/>to<sp/>calculate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Evals<sp/>=<sp/>keycpp::eigs(A,<sp/>nev,<sp/></highlight><highlight class="stringliteral">&quot;LM&quot;</highlight><highlight class="normal">,<sp/>&amp;Evecs);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK((abs(keycpp::norm(A*Evecs<sp/>-<sp/>Evecs*Evals))<sp/>&lt;<sp/>tol));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>Evecs,<sp/>Evals;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>i<sp/>=<sp/>std::complex&lt;double&gt;(0.0,1.0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>A<sp/>=<sp/>{{1.0*i,<sp/>2.0,1.1},</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0.5*i,<sp/>0.5,<sp/>-0.5},</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-0.3,<sp/>4.0,0.2}};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>B<sp/>=<sp/>{{3.0,<sp/>-1.0,10.0},</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-1.0,<sp/>2.0,<sp/>-1.0},</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1.0,<sp/>-1.0,2.0}};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nev<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>values<sp/>to<sp/>calculate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Evals<sp/>=<sp/>keycpp::eigs(A,<sp/>B,<sp/>nev,<sp/></highlight><highlight class="stringliteral">&quot;LM&quot;</highlight><highlight class="normal">,<sp/>&amp;Evecs);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK((abs(keycpp::norm(A*Evecs<sp/>-<sp/>B*Evecs*Evals))<sp/>&lt;<sp/>tol));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>for<sp/>sparse<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>Evecs,<sp/>Evals;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>i<sp/>=<sp/>std::complex&lt;double&gt;(0.0,1.0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>A<sp/>=<sp/>{{1.0*i,<sp/>2.0,1.1},</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0.5*i,<sp/>0.5,<sp/>-0.5},</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-0.3,<sp/>4.0,0.2}};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>,2,SPARSE_MATRIX&gt;<sp/>B<sp/>=<sp/>sparse(A);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nev<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>values<sp/>to<sp/>calculate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Evals<sp/>=<sp/>keycpp::eigs(B,<sp/>nev,<sp/></highlight><highlight class="stringliteral">&quot;LM&quot;</highlight><highlight class="normal">,<sp/>&amp;Evecs);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK((abs(keycpp::norm(B*Evecs<sp/>-<sp/>Evecs*Evals))<sp/>&lt;<sp/>tol));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="/media/Storage/Research/open_source/keycpp/testing/test_eigs.cpp"/>
  </compounddef>
</doxygen>
