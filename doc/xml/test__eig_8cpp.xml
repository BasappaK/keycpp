<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="test__eig_8cpp" kind="file">
    <compoundname>test_eig.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes refid="keycpp_8h" local="yes">keycpp.h</includes>
    <incdepgraph>
      <node id="336">
        <label>list</label>
      </node>
      <node id="453">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparsePermutation.h</label>
      </node>
      <node id="442">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseMatrixBase.h</label>
      </node>
      <node id="427">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CoreIterators.h</label>
      </node>
      <node id="315">
        <label>stdarg.h</label>
      </node>
      <node id="347">
        <label>functional</label>
      </node>
      <node id="304">
        <label>iomanip</label>
      </node>
      <node id="471">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/misc/Solve.h</label>
      </node>
      <node id="479">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLUImpl.h</label>
      </node>
      <node id="407">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ProductBase.h</label>
      </node>
      <node id="458">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseProduct.h</label>
      </node>
      <node id="313">
        <label>limits</label>
      </node>
      <node id="389">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Stride.h</label>
      </node>
      <node id="441">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseUtil.h</label>
      </node>
      <node id="375">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ForceAlignedAccess.h</label>
      </node>
      <node id="470">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseCholesky</label>
      </node>
      <node id="402">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Fuzzy.h</label>
      </node>
      <node id="339">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseCore</label>
      </node>
      <node id="352">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/ForwardDeclarations.h</label>
      </node>
      <node id="363">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DenseBase.h</label>
      </node>
      <node id="317">
        <label>iterator</label>
      </node>
      <node id="396">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Diagonal.h</label>
      </node>
      <node id="365">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/MatrixBase.h</label>
      </node>
      <node id="465">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/OrderingMethods</label>
      </node>
      <node id="424">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularSolverMatrix.h</label>
      </node>
      <node id="490">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h</label>
      </node>
      <node id="436">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h</label>
      </node>
      <node id="437">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ArrayWrapper.h</label>
      </node>
      <node id="343">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/MKL_support.h</label>
      </node>
      <node id="301">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="418">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h</label>
      </node>
      <node id="369">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/MatrixCwiseBinaryOps.h</label>
      </node>
      <node id="400">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Redux.h</label>
      </node>
      <node id="483">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_relax_snode.h</label>
      </node>
      <node id="415">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h</label>
      </node>
      <node id="422">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularMatrixVector.h</label>
      </node>
      <node id="302">
        <label>keycpp.h</label>
        <link refid="keycpp_8h"/>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="309" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="311" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="353" relation="include">
        </childnode>
        <childnode refid="354" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="356" relation="include">
        </childnode>
        <childnode refid="357" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
        <childnode refid="359" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="366" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="369" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="410" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="424" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="435" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="473" relation="include">
        </childnode>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="499" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="502" relation="include">
        </childnode>
      </node>
      <node id="478">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h</label>
      </node>
      <node id="322">
        <label>stdlib.h</label>
      </node>
      <node id="426">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/BandMatrix.h</label>
      </node>
      <node id="351">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Constants.h</label>
      </node>
      <node id="477">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_Structs.h</label>
      </node>
      <node id="372">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/BlasUtil.h</label>
      </node>
      <node id="419">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h</label>
      </node>
      <node id="481">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_Memory.h</label>
      </node>
      <node id="447">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseVector.h</label>
      </node>
      <node id="364">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/BlockMethods.h</label>
      </node>
      <node id="308">
        <label>cmath</label>
      </node>
      <node id="346">
        <label>cassert</label>
      </node>
      <node id="362">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DenseCoeffsBase.h</label>
      </node>
      <node id="361">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Functors.h</label>
      </node>
      <node id="318">
        <label>stdexcept</label>
      </node>
      <node id="488">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h</label>
      </node>
      <node id="377">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/NoAlias.h</label>
      </node>
      <node id="439">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/ReenableStupidWarnings.h</label>
      </node>
      <node id="360">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/arch/Default/Settings.h</label>
      </node>
      <node id="485">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h</label>
      </node>
      <node id="307">
        <label>string</label>
      </node>
      <node id="355">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/XprHelper.h</label>
      </node>
      <node id="359">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/GenericPacketMath.h</label>
      </node>
      <node id="440">
        <label>map</label>
      </node>
      <node id="457">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h</label>
      </node>
      <node id="397">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DiagonalProduct.h</label>
      </node>
      <node id="414">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralMatrixVector.h</label>
      </node>
      <node id="496">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/IterativeLinearSolvers</label>
      </node>
      <node id="445">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseMatrix.h</label>
      </node>
      <node id="497">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h</label>
      </node>
      <node id="460">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h</label>
      </node>
      <node id="333">
        <label>fstream</label>
      </node>
      <node id="495">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseQR/SparseQR.h</label>
      </node>
      <node id="316">
        <label>vector_k.h</label>
        <link refid="vector__k_8h_source"/>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
      </node>
      <node id="432">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Replicate.h</label>
      </node>
      <node id="382">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseUnaryOp.h</label>
      </node>
      <node id="378">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/PlainObjectBase.h</label>
      </node>
      <node id="356">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Memory.h</label>
      </node>
      <node id="446">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/MappedSparseMatrix.h</label>
      </node>
      <node id="326">
        <label>limits.h</label>
      </node>
      <node id="431">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Random.h</label>
      </node>
      <node id="425">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularSolverVector.h</label>
      </node>
      <node id="412">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/Parallelizer.h</label>
      </node>
      <node id="484">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_pivotL.h</label>
      </node>
      <node id="353">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Meta.h</label>
      </node>
      <node id="393">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Ref.h</label>
      </node>
      <node id="501">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h</label>
      </node>
      <node id="357">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/NumTraits.h</label>
      </node>
      <node id="338">
        <label>Eigen/Sparse</label>
      </node>
      <node id="398">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/PermutationMatrix.h</label>
      </node>
      <node id="462">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h</label>
      </node>
      <node id="449">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseTranspose.h</label>
      </node>
      <node id="434">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ArrayBase.h</label>
      </node>
      <node id="498">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h</label>
      </node>
      <node id="411">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h</label>
      </node>
      <node id="451">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h</label>
      </node>
      <node id="373">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DenseStorage.h</label>
      </node>
      <node id="482">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h</label>
      </node>
      <node id="384">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseUnaryView.h</label>
      </node>
      <node id="310">
        <label>boost/range.hpp</label>
      </node>
      <node id="410">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/SelfAdjointView.h</label>
      </node>
      <node id="413">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/CoeffBasedProduct.h</label>
      </node>
      <node id="325">
        <label>string.h</label>
      </node>
      <node id="459">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseDenseProduct.h</label>
      </node>
      <node id="358">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/MathFunctions.h</label>
      </node>
      <node id="395">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DiagonalMatrix.h</label>
      </node>
      <node id="334">
        <label>cstdio</label>
      </node>
      <node id="430">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/VectorwiseOp.h</label>
      </node>
      <node id="480">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseColEtree.h</label>
      </node>
      <node id="454">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseRedux.h</label>
      </node>
      <node id="366">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h</label>
      </node>
      <node id="455">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseFuzzy.h</label>
      </node>
      <node id="314">
        <label>ctime</label>
      </node>
      <node id="300">
        <label>test_eig.cpp</label>
        <link refid="test_eig.cpp"/>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="380">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Array.h</label>
      </node>
      <node id="408">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/GeneralProduct.h</label>
      </node>
      <node id="494">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseQR</label>
      </node>
      <node id="406">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Flagged.h</label>
      </node>
      <node id="474">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h</label>
      </node>
      <node id="423">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h</label>
      </node>
      <node id="306">
        <label>vector</label>
      </node>
      <node id="342">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Macros.h</label>
      </node>
      <node id="354">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/StaticAssert.h</label>
      </node>
      <node id="433">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Reverse.h</label>
      </node>
      <node id="404">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Swap.h</label>
      </node>
      <node id="489">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_column_bmod.h</label>
      </node>
      <node id="311">
        <label>utility</label>
      </node>
      <node id="443">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/CompressedStorage.h</label>
      </node>
      <node id="329">
        <label>sstream</label>
      </node>
      <node id="386">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Dot.h</label>
      </node>
      <node id="461">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseTriangularView.h</label>
      </node>
      <node id="387">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/StableNorm.h</label>
      </node>
      <node id="475">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseLU</label>
      </node>
      <node id="337">
        <label>SparseMatrix.h</label>
        <link refid="_sparse_matrix_8h_source"/>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
      </node>
      <node id="328">
        <label>Figure.h</label>
        <link refid="_figure_8h_source"/>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
      </node>
      <node id="421">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointRank2Update.h</label>
      </node>
      <node id="309">
        <label>boost/numeric/odeint.hpp</label>
      </node>
      <node id="492">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_Utils.h</label>
      </node>
      <node id="435">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h</label>
      </node>
      <node id="473">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h</label>
      </node>
      <node id="327">
        <label>Spline.h</label>
        <link refid="_spline_8h_source"/>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
      </node>
      <node id="324">
        <label>math.h</label>
      </node>
      <node id="399">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Transpositions.h</label>
      </node>
      <node id="468">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/OrderingMethods/Ordering.h</label>
      </node>
      <node id="348">
        <label>iosfwd</label>
      </node>
      <node id="344">
        <label>cerrno</label>
      </node>
      <node id="335">
        <label>cstdlib</label>
      </node>
      <node id="383">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseNullaryOp.h</label>
      </node>
      <node id="341">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/DisableStupidWarnings.h</label>
      </node>
      <node id="417">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h</label>
      </node>
      <node id="416">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/SolveTriangular.h</label>
      </node>
      <node id="303">
        <label>iostream</label>
      </node>
      <node id="367">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/CommonCwiseBinaryOps.h</label>
      </node>
      <node id="345">
        <label>cstddef</label>
      </node>
      <node id="391">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Block.h</label>
      </node>
      <node id="487">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_panel_bmod.h</label>
      </node>
      <node id="486">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_kernel_bmod.h</label>
      </node>
      <node id="392">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/VectorBlock.h</label>
      </node>
      <node id="379">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Matrix.h</label>
      </node>
      <node id="450">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h</label>
      </node>
      <node id="493">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU.h</label>
      </node>
      <node id="350">
        <label>climits</label>
      </node>
      <node id="332">
        <label>gnuplot_i.h</label>
        <link refid="gnuplot__i_8h_source"/>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
      </node>
      <node id="502">
        <label>znaupd.h</label>
        <link refid="znaupd_8h_source"/>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
      </node>
      <node id="371">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Assign.h</label>
      </node>
      <node id="388">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/MapBase.h</label>
      </node>
      <node id="401">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Visitor.h</label>
      </node>
      <node id="464">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseView.h</label>
      </node>
      <node id="491">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_pruneL.h</label>
      </node>
      <node id="330">
        <label>chrono</label>
      </node>
      <node id="456">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h</label>
      </node>
      <node id="394">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Transpose.h</label>
      </node>
      <node id="403">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/IO.h</label>
      </node>
      <node id="429">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Select.h</label>
      </node>
      <node id="499">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h</label>
      </node>
      <node id="340">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/Core</label>
      </node>
      <node id="428">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/BooleanRedux.h</label>
      </node>
      <node id="319">
        <label>Matrix.h</label>
        <link refid="_matrix_8h_source"/>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
      </node>
      <node id="381">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseBinaryOp.h</label>
      </node>
      <node id="466">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/OrderingMethods/Amd.h</label>
      </node>
      <node id="331">
        <label>thread</label>
      </node>
      <node id="368">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/MatrixCwiseUnaryOps.h</label>
      </node>
      <node id="444">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/AmbiVector.h</label>
      </node>
      <node id="321">
        <label>kiss_fft.h</label>
        <link refid="kiss__fft_8h_source"/>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
      </node>
      <node id="409">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/TriangularMatrix.h</label>
      </node>
      <node id="500">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h</label>
      </node>
      <node id="469">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h</label>
      </node>
      <node id="305">
        <label>complex</label>
      </node>
      <node id="472">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/misc/SparseSolve.h</label>
      </node>
      <node id="312">
        <label>algorithm</label>
      </node>
      <node id="374">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/NestByValue.h</label>
      </node>
      <node id="438">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/GlobalFunctions.h</label>
      </node>
      <node id="323">
        <label>stdio.h</label>
      </node>
      <node id="452">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseDot.h</label>
      </node>
      <node id="370">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/EigenBase.h</label>
      </node>
      <node id="349">
        <label>cstring</label>
      </node>
      <node id="385">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/SelfCwiseBinaryOp.h</label>
      </node>
      <node id="420">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointProduct.h</label>
      </node>
      <node id="405">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CommaInitializer.h</label>
      </node>
      <node id="376">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ReturnByValue.h</label>
      </node>
      <node id="463">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/TriangularSolver.h</label>
      </node>
      <node id="390">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Map.h</label>
      </node>
      <node id="320">
        <label>_kiss_fft_guts.h</label>
        <link refid="__kiss__fft__guts_8h_source"/>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
      </node>
      <node id="476">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h</label>
      </node>
      <node id="467">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/NonMPL2.h</label>
      </node>
      <node id="448">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseBlock.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__eig_8cpp_1a741720689490b2d9a47c39cca8f5af1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(eig_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>eig_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/testing/test_eig.cpp" line="6" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/testing/test_eig.cpp" bodystart="6" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keycpp_8h" kindref="compound">keycpp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">BOOST_AUTO_TEST_SUITE(KeyCpp_Unit_Testing)</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">BOOST_AUTO_TEST_CASE(eig_test)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>1e-10;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>A<sp/>=<sp/>{{1.0,<sp/>2.0},</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{2.0,<sp/>1.0}};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Expected<sp/>eigenvalues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>lambda1<sp/>=<sp/>keycpp::diag({-1.0,<sp/>3.0});</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>lambda2<sp/>=<sp/>keycpp::diag({3.0,<sp/>-1.0});</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>vec;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ans<sp/>=<sp/><ref refid="namespacekeycpp_1aef2cabbae720e89202edc998eb6cbfec" kindref="member" tooltip="Generalized complex-valued eigenvalue solver using LAPACK function call. ">eig</ref>(A,<sp/>&amp;vec);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>BOOST_CHECK((abs(keycpp::norm(lambda1-ans))<sp/>&lt;<sp/>tol)<sp/>||<sp/>(abs(keycpp::norm(lambda2-ans))<sp/>&lt;<sp/>tol));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(keycpp::norm(lambda1-ans))<sp/>&lt;<sp/>tol)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_CLOSE(real(vec(0,0)/vec(1,0)),<sp/>-1.0,tol);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_CLOSE(real(vec(0,1)/vec(1,1)),<sp/>1.0,tol);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(keycpp::norm(lambda2-ans))<sp/>&lt;<sp/>tol)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_CLOSE(real(vec(0,0)/vec(1,0)),<sp/>1.0,tol);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK_CLOSE(real(vec(0,1)/vec(1,1)),<sp/>-1.0,tol);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="/media/Storage/Research/open_source/keycpp/testing/test_eig.cpp"/>
  </compounddef>
</doxygen>
