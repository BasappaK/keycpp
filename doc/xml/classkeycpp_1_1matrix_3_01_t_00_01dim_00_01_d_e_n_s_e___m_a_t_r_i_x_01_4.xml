<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4" kind="class" prot="public">
    <compoundname>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>size_t</type>
        <declname>dim</declname>
        <defname>dim</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aa037b5071f23e2ceeed4ed5710334ae0" prot="public" static="no">
        <type><ref refid="classkeycpp_1_1vector__k" kindref="compound">keycpp::vector_k</ref>&lt; T &gt;::<ref refid="classkeycpp_1_1_pointer_iterator" kindref="compound">iterator</ref></type>
        <definition>typedef keycpp::vector_k&lt;T&gt;::iterator keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="71" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a35bd9c01e306676c01b2e12b3c976419" prot="public" static="no">
        <type><ref refid="classkeycpp_1_1vector__k" kindref="compound">keycpp::vector_k</ref>&lt; T &gt;::<ref refid="classkeycpp_1_1_pointer_iterator" kindref="compound">const_iterator</ref></type>
        <definition>typedef keycpp::vector_k&lt;T&gt;::const_iterator keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="72" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a0630f2a4ec4b53e2f6339b06301cc583" prot="private" static="no" mutable="no">
        <type><ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; T &gt;</type>
        <definition>vector_k&lt;T&gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::mData</definition>
        <argsstring></argsstring>
        <name>mData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="213" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a08dc333b9e471b93c3735083c1d9ebba" prot="private" static="no" mutable="no">
        <type>std::array&lt; size_t, dim &gt;</type>
        <definition>std::array&lt;size_t,dim&gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::mSize</definition>
        <argsstring></argsstring>
        <name>mSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="214" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ab0760db6d5f2fbc2b81897e2ea6ba599" prot="private" static="no" mutable="no">
        <type><ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; <ref refid="classkeycpp_1_1span" kindref="compound">span</ref> &gt;</type>
        <definition>vector_k&lt;span&gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::mSpan</definition>
        <argsstring></argsstring>
        <name>mSpan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="215" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a93c2cf1d3ab94c702656c7ed8ad06cd3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::submat</definition>
        <argsstring></argsstring>
        <name>submat</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="216" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a3560092cead53294e33871aea7fb59eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::matrix</definition>
        <argsstring>()</argsstring>
        <name>matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="74" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="220" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ab8db981afb6350b1959fa91116d898d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::matrix</definition>
        <argsstring>(const matrix&lt; T, dim &gt; &amp;A)</argsstring>
        <name>matrix</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, dim &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="75" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="230" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a47b2d08a3a0c913f64c0fb2c1f214d4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::matrix</definition>
        <argsstring>(bool, vector_k&lt; T &gt; &amp;mat, size_t nrows, size_t ncols)</argsstring>
        <name>matrix</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; T &gt; &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nrows</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ncols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="76" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="245" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1af1e35182cdd32bd7fb2b92c421a24cc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::matrix</definition>
        <argsstring>(bool, vector_k&lt; T &gt; &amp;mat, size_t nrows, size_t ncols, const vector_k&lt; span &gt; &amp;span_all)</argsstring>
        <name>matrix</name>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; T &gt; &amp;</type>
          <declname>mat</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nrows</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ncols</declname>
        </param>
        <param>
          <type>const <ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; <ref refid="classkeycpp_1_1span" kindref="compound">span</ref> &gt; &amp;</type>
          <declname>span_all</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="77" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="259" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a605bfa9d85fdfd6a85f81688be389f64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::matrix</definition>
        <argsstring>(const size_t &amp;d1, const size_t &amp;d2=0,...)</argsstring>
        <name>matrix</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>d2</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="78" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="274" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a4843f12eb9e6a7b463fbea9da1e972e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::matrix</definition>
        <argsstring>(const vector_k&lt; vector_k&lt; T &gt;&gt; &amp;mat)</argsstring>
        <name>matrix</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; <ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; T &gt;&gt; &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1acf06c77967a348fa86eb2216c3140fbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::matrix</definition>
        <argsstring>(const vector_k&lt; T &gt; &amp;mat)</argsstring>
        <name>matrix</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; T &gt; &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="80" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="337" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aa18a0b219cc8263b80a9b2dba7c2827f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::matrix</definition>
        <argsstring>(const std::initializer_list&lt; std::initializer_list&lt; T &gt;&gt; &amp;lst)</argsstring>
        <name>matrix</name>
        <param>
          <type>const std::initializer_list&lt; std::initializer_list&lt; T &gt;&gt; &amp;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1afaa68e3f8d7dcd63035e3beefab20dd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::matrix</definition>
        <argsstring>(const std::initializer_list&lt; T &gt; &amp;lst)</argsstring>
        <name>matrix</name>
        <param>
          <type>const std::initializer_list&lt; T &gt; &amp;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="82" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="378" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a24b6bcb1a8db9397cc108aaba5615a21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator()</definition>
        <argsstring>(const size_t &amp;i, const size_t &amp;j, const size_t &amp;k,...)</argsstring>
        <name>operator()</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="83" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="395" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ae84cb195aaf68e3be6a52b8198bb0c5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator()</definition>
        <argsstring>(const size_t &amp;i, const size_t &amp;j, const size_t &amp;k,...) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="84" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="442" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a88e58eb197f1880dc2682969edfccb47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator()</definition>
        <argsstring>(const size_t &amp;i, const size_t &amp;j)</argsstring>
        <name>operator()</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="85" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="489" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a5c093310bca073d236ad6ef2b7bd3efd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator()</definition>
        <argsstring>(const size_t &amp;i, const size_t &amp;j) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="86" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="538" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a2e04ff184c86e12e1826c2ff0481c572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 2 &gt;</type>
        <definition>matrix&lt; T, 2 &gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator()</definition>
        <argsstring>(const size_t &amp;i, const span &amp;cols)</argsstring>
        <name>operator()</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classkeycpp_1_1span" kindref="compound">span</ref> &amp;</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="87" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="587" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a726888eb1a27a7cab6634ac9cf6f5e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 2 &gt;</type>
        <definition>matrix&lt; T, 2 &gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator()</definition>
        <argsstring>(const span &amp;rows, const size_t &amp;j)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1span" kindref="compound">span</ref> &amp;</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="88" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="603" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a85f1ffe0a02b42871b44fddc7f624e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 2 &gt;</type>
        <definition>matrix&lt; T, 2 &gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator()</definition>
        <argsstring>(const span &amp;rows, const span &amp;cols)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1span" kindref="compound">span</ref> &amp;</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>const <ref refid="classkeycpp_1_1span" kindref="compound">span</ref> &amp;</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="89" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="619" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a7d24caea8d681c7efeb3827ec6e91892" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 2 &gt;</type>
        <definition>matrix&lt; T, 2 &gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator()</definition>
        <argsstring>(const size_t &amp;i, const span &amp;cols) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classkeycpp_1_1span" kindref="compound">span</ref> &amp;</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="90" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="635" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a110667f5c8dff8aa7da3ca361f320f4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 2 &gt;</type>
        <definition>matrix&lt; T, 2 &gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator()</definition>
        <argsstring>(const span &amp;rows, const size_t &amp;j) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1span" kindref="compound">span</ref> &amp;</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="91" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="683" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a15784e36972d5b7e01df8e9a62081ee6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 2 &gt;</type>
        <definition>matrix&lt; T, 2 &gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator()</definition>
        <argsstring>(const span &amp;rows, const span &amp;cols) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1span" kindref="compound">span</ref> &amp;</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>const <ref refid="classkeycpp_1_1span" kindref="compound">span</ref> &amp;</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="92" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="731" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a0a76f6762eeac25caed0c523b4ae7334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator()</definition>
        <argsstring>(const size_t &amp;i)</argsstring>
        <name>operator()</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="93" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="807" bodyend="824"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a4adb6446a1710207ed95e217ae76189b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator()</definition>
        <argsstring>(const size_t &amp;i) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="94" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="827" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a0a371aa1e667199f36a4afc8abbded8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, dim &gt; &amp;</type>
        <definition>matrix&lt; T, dim &gt; &amp; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator+=</definition>
        <argsstring>(const matrix&lt; U, dim &gt; &amp;B)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, dim &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="96" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="848" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a53cd54f01dd7fd5eac7cf1ab05b52136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, dim &gt; &amp;</type>
        <definition>matrix&lt; T, dim &gt; &amp; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator-=</definition>
        <argsstring>(const matrix&lt; U, dim &gt; &amp;B)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, dim &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="98" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="875" bodyend="898"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a63413f901d173feb49a19c45b3ba22ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator!=</definition>
        <argsstring>(const matrix&lt; T, dim &gt; &amp;B) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, dim &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="99" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="925" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aa49ab91103b7564b17c24cf110fe6afe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator==</definition>
        <argsstring>(const matrix&lt; T, dim &gt; &amp;B) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, dim &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="100" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="901" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a6457b3ca9e3d89b66311ee02049ee085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, dim &gt; &amp;</type>
        <definition>matrix&lt;T,dim&gt;&amp; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator=</definition>
        <argsstring>(const matrix&lt; U, dim &gt; &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, dim &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a1a37152683c023510c2359aaa9814df9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, dim &gt; &amp;</type>
        <definition>matrix&lt;T,dim&gt;&amp; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator=</definition>
        <argsstring>(const matrix&lt; T, dim &gt; &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, dim &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ab5ad217d3aef8aed233a3e2f72d47d23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::size</definition>
        <argsstring>(const size_t &amp;n) const </argsstring>
        <name>size</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="104" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="1000" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1af441fce2070946fe6f31d14bfa2e4888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::resize</definition>
        <argsstring>(const std::array&lt; size_t, dim &gt; &amp;pSize)</argsstring>
        <name>resize</name>
        <param>
          <type>const std::array&lt; size_t, dim &gt; &amp;</type>
          <declname>pSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="105" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="1033" bodyend="1089"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a2f74f12442625dc20aa8bfe6b86762c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::resize</definition>
        <argsstring>(const matrix&lt; size_t, 2 &gt; &amp;pSize)</argsstring>
        <name>resize</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; size_t, 2 &gt; &amp;</type>
          <declname>pSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a7f2d158956f3ceec00e0178c3016117b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::resize</definition>
        <argsstring>(const size_t &amp;pSize)</argsstring>
        <name>resize</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>pSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="107" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="1156" bodyend="1176"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aadcd3b538bb9783a75929c8527e4ad80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="108" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="1180" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a8101ffdb8bbd5639c5a748d1eba5e8dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1_pointer_iterator" kindref="compound">iterator</ref></type>
        <definition>iterator keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="109" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a1516fda033a0905d165d04bf14765a11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1_pointer_iterator" kindref="compound">iterator</ref></type>
        <definition>iterator keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="110" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a35c59313a860fa669e243e7eff520fb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1_pointer_iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="111" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a2a575efd10d0c2c3371a3661fb723cb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1_pointer_iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="112" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a098cabfe4bb635f5c56b49be703cf049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 2 &gt;</type>
        <definition>matrix&lt; T, 2 &gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::row</definition>
        <argsstring>(const size_t &amp;i)</argsstring>
        <name>row</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="113" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="1194" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a11d2309464434d6bb22204525858c1cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 2 &gt;</type>
        <definition>matrix&lt; T, 2 &gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::row</definition>
        <argsstring>(const size_t &amp;i) const </argsstring>
        <name>row</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="114" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="1232" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a009ae51792c2f19fe4c2cb3c971b5c92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 2 &gt;</type>
        <definition>matrix&lt; T, 2 &gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::col</definition>
        <argsstring>(const size_t &amp;j) const </argsstring>
        <name>col</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="115" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="1254" bodyend="1273"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aab4064295d4b7197d9e469a761f52d88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, 2 &gt;</type>
        <definition>matrix&lt; T, 2 &gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::col</definition>
        <argsstring>(const size_t &amp;j)</argsstring>
        <name>col</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="116" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="1212" bodyend="1229"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ace566c53a55376f8fc33f30d54a4bc67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::reserve</definition>
        <argsstring>(const size_t &amp;N)</argsstring>
        <name>reserve</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="117" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="1276" bodyend="1279"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a392d085da311436c9b0097b1dd738505" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::length</definition>
        <argsstring>() const </argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="118" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a7edf8f9e6a5d2a9ba296bd3772676fb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::numel</definition>
        <argsstring>() const </argsstring>
        <name>numel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="122" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="122" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aaa47adc6d0ea4ae6b9c16a0cde9e5c7b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::isVec</definition>
        <argsstring>() const </argsstring>
        <name>isVec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="139" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="139" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a7b8325672e0390bee4e4e09d39b13e6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::get_inc</definition>
        <argsstring>() const </argsstring>
        <name>get_inc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="155" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a8597f6e5e75c873058d7a0afcf51744d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator vector_k&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>operator vector_k&lt; T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="167" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="167" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ad2021fffbf78ca7a3f09a8f0e6e84197" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator T</definition>
        <argsstring>()</argsstring>
        <name>operator T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="182" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="182" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a71fbf896f76aaddf74cdf467b0b1aa7f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::get_submat</definition>
        <argsstring>() const </argsstring>
        <name>get_submat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="192" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ab6adfcca4e5bcb325ab4945124e10233" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::array&lt; size_t, dim &gt;</type>
        <definition>std::array&lt;size_t,dim&gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::get_mSize</definition>
        <argsstring>() const </argsstring>
        <name>get_mSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="197" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a600a0cde777b120af3ea25c662cd79e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; T &gt;</type>
        <definition>vector_k&lt;T&gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::get_mData</definition>
        <argsstring>() const </argsstring>
        <name>get_mData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="202" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a47adfc7cc2ee61a785f2280a65486efa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; <ref refid="classkeycpp_1_1span" kindref="compound">span</ref> &gt;</type>
        <definition>vector_k&lt;span&gt; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::get_mSpan</definition>
        <argsstring>() const </argsstring>
        <name>get_mSpan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="207" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a37bc3b9c0887bfb1f1897aec6c0df64c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; T, dim &gt; &amp;</type>
        <definition>matrix&lt;T,dim&gt;&amp; keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;::operator=</definition>
        <argsstring>(const matrix&lt; U, dim, DENSE_MATRIX &gt; &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, dim, DENSE_MATRIX &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="932" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="932" bodyend="961"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a5ac472827d5fe94db870bb5d8621509c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>friend <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; decltype(std::declval&lt; V &gt;)*std::declval&lt; U &gt;)), 2 &gt;</type>
        <definition>matrix&lt;decltype(std::declval&lt;V&gt;)*std::declval&lt;U&gt;)),2&gt; operator*</definition>
        <argsstring>(const matrix&lt; V, 2 &gt; &amp;A, const matrix&lt; U, 2 &gt; &amp;B)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; V, 2 &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; U, 2 &gt; &amp;</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="159" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="1284" bodyend="1307"/>
      </memberdef>
      <memberdef kind="friend" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a9576607e2d20373518cd49262288e8bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend double</type>
        <definition>double norm</definition>
        <argsstring>(const matrix&lt; std::complex&lt; double &gt;&gt; &amp;A_in, std::string method)</argsstring>
        <name>norm</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; std::complex&lt; double &gt;&gt; &amp;</type>
          <declname>A_in</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aa9c5eb3f4a65db922dc9ab19469c465c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend double</type>
        <definition>double norm</definition>
        <argsstring>(const matrix&lt; double &gt; &amp;A_in, std::string method)</argsstring>
        <name>norm</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; double &gt; &amp;</type>
          <declname>A_in</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>method</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a5b7d575d8ffa1780db174981167ffb7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void mv_special</definition>
        <argsstring>(int n, std::complex&lt; double &gt; *in, std::complex&lt; double &gt; *out, const matrix&lt; std::complex&lt; double &gt;&gt; &amp;A, matrix&lt; std::complex&lt; double &gt;&gt; &amp;Y, int *iw)</argsstring>
        <name>mv_special</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; std::complex&lt; double &gt;&gt; &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; std::complex&lt; double &gt;&gt; &amp;</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>iw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="162" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/znaupd.h" bodystart="54" bodyend="79"/>
      </memberdef>
      <memberdef kind="friend" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a084bb49e438644c7b787ca79a3ec2464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void mv</definition>
        <argsstring>(int n, std::complex&lt; double &gt; *in, std::complex&lt; double &gt; *out, const matrix&lt; std::complex&lt; double &gt;&gt; &amp;A)</argsstring>
        <name>mv</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt; *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; std::complex&lt; double &gt;&gt; &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="163" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/znaupd.h" bodystart="25" bodyend="36"/>
      </memberdef>
      <memberdef kind="friend" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a30b43bbd651630fd1322b20ab9504ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void znaupd_shift_invert</definition>
        <argsstring>(int n, int nev, matrix&lt; std::complex&lt; double &gt;&gt; &amp;Evals, std::complex&lt; double &gt; sigma, const matrix&lt; std::complex&lt; double &gt;&gt; &amp;A)</argsstring>
        <name>znaupd_shift_invert</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nev</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; std::complex&lt; double &gt;&gt; &amp;</type>
          <declname>Evals</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; std::complex&lt; double &gt;&gt; &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="164" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/znaupd.h" bodystart="436" bodyend="615"/>
      </memberdef>
      <memberdef kind="friend" id="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a02b659cfe9bf61495ae3a2fa67881e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend void</type>
        <definition>void znaupd_shift_invert</definition>
        <argsstring>(int n, int nev, matrix&lt; std::complex&lt; double &gt;&gt; &amp;Evals, matrix&lt; std::complex&lt; double &gt;&gt; &amp;Evecs, std::complex&lt; double &gt; sigma, const matrix&lt; std::complex&lt; double &gt;&gt; &amp;A)</argsstring>
        <name>znaupd_shift_invert</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nev</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; std::complex&lt; double &gt;&gt; &amp;</type>
          <declname>Evals</declname>
        </param>
        <param>
          <type><ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; std::complex&lt; double &gt;&gt; &amp;</type>
          <declname>Evecs</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>const <ref refid="classkeycpp_1_1matrix" kindref="compound">matrix</ref>&lt; std::complex&lt; double &gt;&gt; &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="165" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/znaupd.h" bodystart="617" bodyend="767"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/media/Storage/Research/open_source/keycpp/include/Matrix.h" line="69" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/include/Matrix.h" bodystart="68" bodyend="217"/>
    <listofallmembers>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a8101ffdb8bbd5639c5a748d1eba5e8dc" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>begin</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a35c59313a860fa669e243e7eff520fb5" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>begin</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a009ae51792c2f19fe4c2cb3c971b5c92" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>col</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aab4064295d4b7197d9e469a761f52d88" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>col</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a35bd9c01e306676c01b2e12b3c976419" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>const_iterator</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aadcd3b538bb9783a75929c8527e4ad80" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>empty</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a1516fda033a0905d165d04bf14765a11" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>end</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a2a575efd10d0c2c3371a3661fb723cb7" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>end</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a7b8325672e0390bee4e4e09d39b13e6a" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>get_inc</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a600a0cde777b120af3ea25c662cd79e1" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>get_mData</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ab6adfcca4e5bcb325ab4945124e10233" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>get_mSize</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a47adfc7cc2ee61a785f2280a65486efa" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>get_mSpan</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a71fbf896f76aaddf74cdf467b0b1aa7f" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>get_submat</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aaa47adc6d0ea4ae6b9c16a0cde9e5c7b" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>isVec</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aa037b5071f23e2ceeed4ed5710334ae0" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>iterator</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a392d085da311436c9b0097b1dd738505" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>length</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a3560092cead53294e33871aea7fb59eb" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>matrix</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ab8db981afb6350b1959fa91116d898d5" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>matrix</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a47b2d08a3a0c913f64c0fb2c1f214d4c" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>matrix</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1af1e35182cdd32bd7fb2b92c421a24cc0" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>matrix</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a605bfa9d85fdfd6a85f81688be389f64" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>matrix</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a4843f12eb9e6a7b463fbea9da1e972e3" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>matrix</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1acf06c77967a348fa86eb2216c3140fbb" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>matrix</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aa18a0b219cc8263b80a9b2dba7c2827f" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>matrix</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1afaa68e3f8d7dcd63035e3beefab20dd7" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>matrix</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a0630f2a4ec4b53e2f6339b06301cc583" prot="private" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>mData</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a08dc333b9e471b93c3735083c1d9ebba" prot="private" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>mSize</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ab0760db6d5f2fbc2b81897e2ea6ba599" prot="private" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>mSpan</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a084bb49e438644c7b787ca79a3ec2464" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>mv</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a5b7d575d8ffa1780db174981167ffb7d" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>mv_special</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a9576607e2d20373518cd49262288e8bd" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>norm</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aa9c5eb3f4a65db922dc9ab19469c465c" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>norm</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a7edf8f9e6a5d2a9ba296bd3772676fb7" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>numel</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ad2021fffbf78ca7a3f09a8f0e6e84197" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator T</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a8597f6e5e75c873058d7a0afcf51744d" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator vector_k&lt; T &gt;</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a63413f901d173feb49a19c45b3ba22ba" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator!=</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a24b6bcb1a8db9397cc108aaba5615a21" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator()</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ae84cb195aaf68e3be6a52b8198bb0c5d" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator()</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a88e58eb197f1880dc2682969edfccb47" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator()</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a5c093310bca073d236ad6ef2b7bd3efd" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator()</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a2e04ff184c86e12e1826c2ff0481c572" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator()</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a726888eb1a27a7cab6634ac9cf6f5e8e" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator()</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a85f1ffe0a02b42871b44fddc7f624e9f" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator()</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a7d24caea8d681c7efeb3827ec6e91892" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator()</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a110667f5c8dff8aa7da3ca361f320f4e" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator()</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a15784e36972d5b7e01df8e9a62081ee6" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator()</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a0a76f6762eeac25caed0c523b4ae7334" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator()</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a4adb6446a1710207ed95e217ae76189b" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator()</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a5ac472827d5fe94db870bb5d8621509c" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator*</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a0a371aa1e667199f36a4afc8abbded8d" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator+=</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a53cd54f01dd7fd5eac7cf1ab05b52136" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator-=</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a6457b3ca9e3d89b66311ee02049ee085" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator=</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a1a37152683c023510c2359aaa9814df9" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator=</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a37bc3b9c0887bfb1f1897aec6c0df64c" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator=</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1aa49ab91103b7564b17c24cf110fe6afe" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>operator==</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ace566c53a55376f8fc33f30d54a4bc67" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>reserve</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1af441fce2070946fe6f31d14bfa2e4888" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>resize</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a2f74f12442625dc20aa8bfe6b86762c1" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>resize</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a7f2d158956f3ceec00e0178c3016117b" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>resize</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a098cabfe4bb635f5c56b49be703cf049" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>row</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a11d2309464434d6bb22204525858c1cf" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>row</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1ab5ad217d3aef8aed233a3e2f72d47d23" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>size</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a93c2cf1d3ab94c702656c7ed8ad06cd3" prot="private" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>submat</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a30b43bbd651630fd1322b20ab9504ec8" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>znaupd_shift_invert</name></member>
      <member refid="classkeycpp_1_1matrix_3_01_t_00_01dim_00_01_d_e_n_s_e___m_a_t_r_i_x_01_4_1a02b659cfe9bf61495ae3a2fa67881e92" prot="public" virt="non-virtual"><scope>keycpp::matrix&lt; T, dim, DENSE_MATRIX &gt;</scope><name>znaupd_shift_invert</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
