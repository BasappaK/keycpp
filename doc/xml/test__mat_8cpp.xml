<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="test__mat_8cpp" kind="file">
    <compoundname>test_mat.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes refid="keycpp_8h" local="yes">keycpp.h</includes>
    <incdepgraph>
      <node id="948">
        <label>list</label>
      </node>
      <node id="1065">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparsePermutation.h</label>
      </node>
      <node id="1054">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseMatrixBase.h</label>
      </node>
      <node id="1039">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CoreIterators.h</label>
      </node>
      <node id="927">
        <label>stdarg.h</label>
      </node>
      <node id="959">
        <label>functional</label>
      </node>
      <node id="916">
        <label>iomanip</label>
      </node>
      <node id="1083">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/misc/Solve.h</label>
      </node>
      <node id="1091">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLUImpl.h</label>
      </node>
      <node id="1019">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ProductBase.h</label>
      </node>
      <node id="1070">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseProduct.h</label>
      </node>
      <node id="925">
        <label>limits</label>
      </node>
      <node id="1001">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Stride.h</label>
      </node>
      <node id="1053">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseUtil.h</label>
      </node>
      <node id="987">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ForceAlignedAccess.h</label>
      </node>
      <node id="1082">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseCholesky</label>
      </node>
      <node id="1014">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Fuzzy.h</label>
      </node>
      <node id="951">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseCore</label>
      </node>
      <node id="964">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/ForwardDeclarations.h</label>
      </node>
      <node id="975">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DenseBase.h</label>
      </node>
      <node id="929">
        <label>iterator</label>
      </node>
      <node id="1008">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Diagonal.h</label>
      </node>
      <node id="977">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/MatrixBase.h</label>
      </node>
      <node id="1077">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/OrderingMethods</label>
      </node>
      <node id="1036">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularSolverMatrix.h</label>
      </node>
      <node id="1102">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h</label>
      </node>
      <node id="1048">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h</label>
      </node>
      <node id="1049">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ArrayWrapper.h</label>
      </node>
      <node id="955">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/MKL_support.h</label>
      </node>
      <node id="913">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="1030">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h</label>
      </node>
      <node id="981">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/MatrixCwiseBinaryOps.h</label>
      </node>
      <node id="1012">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Redux.h</label>
      </node>
      <node id="1095">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_relax_snode.h</label>
      </node>
      <node id="1027">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h</label>
      </node>
      <node id="1034">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularMatrixVector.h</label>
      </node>
      <node id="914">
        <label>keycpp.h</label>
        <link refid="keycpp_8h"/>
        <childnode refid="915" relation="include">
        </childnode>
        <childnode refid="916" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
        <childnode refid="919" relation="include">
        </childnode>
        <childnode refid="920" relation="include">
        </childnode>
        <childnode refid="921" relation="include">
        </childnode>
        <childnode refid="922" relation="include">
        </childnode>
        <childnode refid="923" relation="include">
        </childnode>
        <childnode refid="924" relation="include">
        </childnode>
        <childnode refid="925" relation="include">
        </childnode>
        <childnode refid="926" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="928" relation="include">
        </childnode>
        <childnode refid="931" relation="include">
        </childnode>
        <childnode refid="932" relation="include">
        </childnode>
        <childnode refid="939" relation="include">
        </childnode>
        <childnode refid="940" relation="include">
        </childnode>
        <childnode refid="949" relation="include">
        </childnode>
        <childnode refid="951" relation="include">
        </childnode>
        <childnode refid="952" relation="include">
        </childnode>
        <childnode refid="953" relation="include">
        </childnode>
        <childnode refid="954" relation="include">
        </childnode>
        <childnode refid="955" relation="include">
        </childnode>
        <childnode refid="956" relation="include">
        </childnode>
        <childnode refid="957" relation="include">
        </childnode>
        <childnode refid="947" relation="include">
        </childnode>
        <childnode refid="958" relation="include">
        </childnode>
        <childnode refid="959" relation="include">
        </childnode>
        <childnode refid="960" relation="include">
        </childnode>
        <childnode refid="961" relation="include">
        </childnode>
        <childnode refid="962" relation="include">
        </childnode>
        <childnode refid="963" relation="include">
        </childnode>
        <childnode refid="964" relation="include">
        </childnode>
        <childnode refid="965" relation="include">
        </childnode>
        <childnode refid="966" relation="include">
        </childnode>
        <childnode refid="967" relation="include">
        </childnode>
        <childnode refid="968" relation="include">
        </childnode>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="970" relation="include">
        </childnode>
        <childnode refid="971" relation="include">
        </childnode>
        <childnode refid="972" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
        <childnode refid="975" relation="include">
        </childnode>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="977" relation="include">
        </childnode>
        <childnode refid="978" relation="include">
        </childnode>
        <childnode refid="979" relation="include">
        </childnode>
        <childnode refid="980" relation="include">
        </childnode>
        <childnode refid="981" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
        <childnode refid="983" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
        <childnode refid="985" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="987" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="990" relation="include">
        </childnode>
        <childnode refid="991" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
        <childnode refid="993" relation="include">
        </childnode>
        <childnode refid="994" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
        <childnode refid="996" relation="include">
        </childnode>
        <childnode refid="997" relation="include">
        </childnode>
        <childnode refid="998" relation="include">
        </childnode>
        <childnode refid="999" relation="include">
        </childnode>
        <childnode refid="1000" relation="include">
        </childnode>
        <childnode refid="1001" relation="include">
        </childnode>
        <childnode refid="1002" relation="include">
        </childnode>
        <childnode refid="1003" relation="include">
        </childnode>
        <childnode refid="1004" relation="include">
        </childnode>
        <childnode refid="1005" relation="include">
        </childnode>
        <childnode refid="1006" relation="include">
        </childnode>
        <childnode refid="1007" relation="include">
        </childnode>
        <childnode refid="1008" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
        <childnode refid="1010" relation="include">
        </childnode>
        <childnode refid="1011" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1013" relation="include">
        </childnode>
        <childnode refid="1014" relation="include">
        </childnode>
        <childnode refid="1015" relation="include">
        </childnode>
        <childnode refid="1016" relation="include">
        </childnode>
        <childnode refid="1017" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1020" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
        <childnode refid="1022" relation="include">
        </childnode>
        <childnode refid="1023" relation="include">
        </childnode>
        <childnode refid="1024" relation="include">
        </childnode>
        <childnode refid="1025" relation="include">
        </childnode>
        <childnode refid="1026" relation="include">
        </childnode>
        <childnode refid="1027" relation="include">
        </childnode>
        <childnode refid="1028" relation="include">
        </childnode>
        <childnode refid="1029" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1032" relation="include">
        </childnode>
        <childnode refid="1033" relation="include">
        </childnode>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1036" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
        <childnode refid="1041" relation="include">
        </childnode>
        <childnode refid="1042" relation="include">
        </childnode>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
        <childnode refid="1047" relation="include">
        </childnode>
        <childnode refid="1048" relation="include">
        </childnode>
        <childnode refid="1049" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1051" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
        <childnode refid="1054" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1056" relation="include">
        </childnode>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1059" relation="include">
        </childnode>
        <childnode refid="1060" relation="include">
        </childnode>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1063" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1069" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1071" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1075" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1077" relation="include">
        </childnode>
        <childnode refid="1078" relation="include">
        </childnode>
        <childnode refid="1079" relation="include">
        </childnode>
        <childnode refid="1080" relation="include">
        </childnode>
        <childnode refid="1081" relation="include">
        </childnode>
        <childnode refid="1082" relation="include">
        </childnode>
        <childnode refid="1083" relation="include">
        </childnode>
        <childnode refid="1084" relation="include">
        </childnode>
        <childnode refid="1085" relation="include">
        </childnode>
        <childnode refid="1086" relation="include">
        </childnode>
        <childnode refid="1087" relation="include">
        </childnode>
        <childnode refid="1088" relation="include">
        </childnode>
        <childnode refid="1089" relation="include">
        </childnode>
        <childnode refid="1090" relation="include">
        </childnode>
        <childnode refid="1091" relation="include">
        </childnode>
        <childnode refid="1092" relation="include">
        </childnode>
        <childnode refid="1093" relation="include">
        </childnode>
        <childnode refid="1094" relation="include">
        </childnode>
        <childnode refid="1095" relation="include">
        </childnode>
        <childnode refid="1096" relation="include">
        </childnode>
        <childnode refid="1097" relation="include">
        </childnode>
        <childnode refid="1098" relation="include">
        </childnode>
        <childnode refid="1099" relation="include">
        </childnode>
        <childnode refid="1100" relation="include">
        </childnode>
        <childnode refid="1101" relation="include">
        </childnode>
        <childnode refid="1102" relation="include">
        </childnode>
        <childnode refid="1103" relation="include">
        </childnode>
        <childnode refid="1104" relation="include">
        </childnode>
        <childnode refid="1105" relation="include">
        </childnode>
        <childnode refid="1106" relation="include">
        </childnode>
        <childnode refid="1107" relation="include">
        </childnode>
        <childnode refid="1108" relation="include">
        </childnode>
        <childnode refid="1109" relation="include">
        </childnode>
        <childnode refid="1110" relation="include">
        </childnode>
        <childnode refid="1111" relation="include">
        </childnode>
        <childnode refid="1112" relation="include">
        </childnode>
        <childnode refid="1113" relation="include">
        </childnode>
        <childnode refid="1114" relation="include">
        </childnode>
      </node>
      <node id="1090">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h</label>
      </node>
      <node id="934">
        <label>stdlib.h</label>
      </node>
      <node id="1038">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/BandMatrix.h</label>
      </node>
      <node id="963">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Constants.h</label>
      </node>
      <node id="1089">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_Structs.h</label>
      </node>
      <node id="984">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/BlasUtil.h</label>
      </node>
      <node id="1031">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h</label>
      </node>
      <node id="1093">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_Memory.h</label>
      </node>
      <node id="1059">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseVector.h</label>
      </node>
      <node id="976">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/BlockMethods.h</label>
      </node>
      <node id="920">
        <label>cmath</label>
      </node>
      <node id="958">
        <label>cassert</label>
      </node>
      <node id="974">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DenseCoeffsBase.h</label>
      </node>
      <node id="973">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Functors.h</label>
      </node>
      <node id="930">
        <label>stdexcept</label>
      </node>
      <node id="1100">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h</label>
      </node>
      <node id="989">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/NoAlias.h</label>
      </node>
      <node id="1051">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/ReenableStupidWarnings.h</label>
      </node>
      <node id="972">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/arch/Default/Settings.h</label>
      </node>
      <node id="1097">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h</label>
      </node>
      <node id="919">
        <label>string</label>
      </node>
      <node id="967">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/XprHelper.h</label>
      </node>
      <node id="971">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/GenericPacketMath.h</label>
      </node>
      <node id="1052">
        <label>map</label>
      </node>
      <node id="1069">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h</label>
      </node>
      <node id="1009">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DiagonalProduct.h</label>
      </node>
      <node id="1026">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralMatrixVector.h</label>
      </node>
      <node id="1108">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/IterativeLinearSolvers</label>
      </node>
      <node id="1057">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseMatrix.h</label>
      </node>
      <node id="1109">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h</label>
      </node>
      <node id="1072">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h</label>
      </node>
      <node id="945">
        <label>fstream</label>
      </node>
      <node id="1107">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseQR/SparseQR.h</label>
      </node>
      <node id="928">
        <label>vector_k.h</label>
        <link refid="vector__k_8h_source"/>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="924" relation="include">
        </childnode>
        <childnode refid="915" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
      </node>
      <node id="1044">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Replicate.h</label>
      </node>
      <node id="994">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseUnaryOp.h</label>
      </node>
      <node id="990">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/PlainObjectBase.h</label>
      </node>
      <node id="968">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Memory.h</label>
      </node>
      <node id="1058">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/MappedSparseMatrix.h</label>
      </node>
      <node id="938">
        <label>limits.h</label>
      </node>
      <node id="1043">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Random.h</label>
      </node>
      <node id="1037">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularSolverVector.h</label>
      </node>
      <node id="1024">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/Parallelizer.h</label>
      </node>
      <node id="1096">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_pivotL.h</label>
      </node>
      <node id="965">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Meta.h</label>
      </node>
      <node id="1005">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Ref.h</label>
      </node>
      <node id="1113">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h</label>
      </node>
      <node id="969">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/NumTraits.h</label>
      </node>
      <node id="950">
        <label>Eigen/Sparse</label>
      </node>
      <node id="1010">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/PermutationMatrix.h</label>
      </node>
      <node id="1074">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h</label>
      </node>
      <node id="1061">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseTranspose.h</label>
      </node>
      <node id="1046">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ArrayBase.h</label>
      </node>
      <node id="1110">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h</label>
      </node>
      <node id="1023">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h</label>
      </node>
      <node id="1063">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h</label>
      </node>
      <node id="985">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DenseStorage.h</label>
      </node>
      <node id="1094">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h</label>
      </node>
      <node id="996">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseUnaryView.h</label>
      </node>
      <node id="922">
        <label>boost/range.hpp</label>
      </node>
      <node id="1022">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/SelfAdjointView.h</label>
      </node>
      <node id="1025">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/CoeffBasedProduct.h</label>
      </node>
      <node id="937">
        <label>string.h</label>
      </node>
      <node id="1071">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseDenseProduct.h</label>
      </node>
      <node id="970">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/MathFunctions.h</label>
      </node>
      <node id="1007">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DiagonalMatrix.h</label>
      </node>
      <node id="946">
        <label>cstdio</label>
      </node>
      <node id="1042">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/VectorwiseOp.h</label>
      </node>
      <node id="1092">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseColEtree.h</label>
      </node>
      <node id="1066">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseRedux.h</label>
      </node>
      <node id="978">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h</label>
      </node>
      <node id="1067">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseFuzzy.h</label>
      </node>
      <node id="926">
        <label>ctime</label>
      </node>
      <node id="992">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Array.h</label>
      </node>
      <node id="1020">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/GeneralProduct.h</label>
      </node>
      <node id="1106">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseQR</label>
      </node>
      <node id="1018">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Flagged.h</label>
      </node>
      <node id="1086">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h</label>
      </node>
      <node id="1035">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h</label>
      </node>
      <node id="918">
        <label>vector</label>
      </node>
      <node id="954">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Macros.h</label>
      </node>
      <node id="966">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/StaticAssert.h</label>
      </node>
      <node id="1045">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Reverse.h</label>
      </node>
      <node id="1016">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Swap.h</label>
      </node>
      <node id="1101">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_column_bmod.h</label>
      </node>
      <node id="923">
        <label>utility</label>
      </node>
      <node id="1055">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/CompressedStorage.h</label>
      </node>
      <node id="941">
        <label>sstream</label>
      </node>
      <node id="998">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Dot.h</label>
      </node>
      <node id="1073">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseTriangularView.h</label>
      </node>
      <node id="999">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/StableNorm.h</label>
      </node>
      <node id="1087">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseLU</label>
      </node>
      <node id="949">
        <label>SparseMatrix.h</label>
        <link refid="_sparse_matrix_8h_source"/>
        <childnode refid="915" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="928" relation="include">
        </childnode>
        <childnode refid="950" relation="include">
        </childnode>
      </node>
      <node id="940">
        <label>Figure.h</label>
        <link refid="_figure_8h_source"/>
        <childnode refid="920" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
        <childnode refid="916" relation="include">
        </childnode>
        <childnode refid="919" relation="include">
        </childnode>
        <childnode refid="941" relation="include">
        </childnode>
        <childnode refid="942" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
        <childnode refid="928" relation="include">
        </childnode>
        <childnode refid="944" relation="include">
        </childnode>
        <childnode refid="931" relation="include">
        </childnode>
      </node>
      <node id="1033">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointRank2Update.h</label>
      </node>
      <node id="921">
        <label>boost/numeric/odeint.hpp</label>
      </node>
      <node id="1104">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_Utils.h</label>
      </node>
      <node id="1047">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h</label>
      </node>
      <node id="1085">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h</label>
      </node>
      <node id="939">
        <label>Spline.h</label>
        <link refid="_spline_8h_source"/>
        <childnode refid="915" relation="include">
        </childnode>
        <childnode refid="920" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
        <childnode refid="931" relation="include">
        </childnode>
      </node>
      <node id="936">
        <label>math.h</label>
      </node>
      <node id="1011">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Transpositions.h</label>
      </node>
      <node id="1080">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/OrderingMethods/Ordering.h</label>
      </node>
      <node id="960">
        <label>iosfwd</label>
      </node>
      <node id="956">
        <label>cerrno</label>
      </node>
      <node id="947">
        <label>cstdlib</label>
      </node>
      <node id="995">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseNullaryOp.h</label>
      </node>
      <node id="953">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/DisableStupidWarnings.h</label>
      </node>
      <node id="1029">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h</label>
      </node>
      <node id="1028">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/SolveTriangular.h</label>
      </node>
      <node id="915">
        <label>iostream</label>
      </node>
      <node id="912">
        <label>test_mat.cpp</label>
        <link refid="test_mat.cpp"/>
        <childnode refid="913" relation="include">
        </childnode>
        <childnode refid="914" relation="include">
        </childnode>
      </node>
      <node id="979">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/CommonCwiseBinaryOps.h</label>
      </node>
      <node id="957">
        <label>cstddef</label>
      </node>
      <node id="1003">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Block.h</label>
      </node>
      <node id="1099">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_panel_bmod.h</label>
      </node>
      <node id="1098">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_kernel_bmod.h</label>
      </node>
      <node id="1004">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/VectorBlock.h</label>
      </node>
      <node id="991">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Matrix.h</label>
      </node>
      <node id="1062">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h</label>
      </node>
      <node id="1105">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU.h</label>
      </node>
      <node id="962">
        <label>climits</label>
      </node>
      <node id="944">
        <label>gnuplot_i.h</label>
        <link refid="gnuplot__i_8h_source"/>
        <childnode refid="915" relation="include">
        </childnode>
        <childnode refid="919" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
        <childnode refid="945" relation="include">
        </childnode>
        <childnode refid="941" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="946" relation="include">
        </childnode>
        <childnode refid="947" relation="include">
        </childnode>
        <childnode refid="948" relation="include">
        </childnode>
      </node>
      <node id="1114">
        <label>znaupd.h</label>
        <link refid="znaupd_8h_source"/>
        <childnode refid="920" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
        <childnode refid="950" relation="include">
        </childnode>
      </node>
      <node id="983">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Assign.h</label>
      </node>
      <node id="1000">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/MapBase.h</label>
      </node>
      <node id="1013">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Visitor.h</label>
      </node>
      <node id="1076">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseView.h</label>
      </node>
      <node id="1103">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_pruneL.h</label>
      </node>
      <node id="942">
        <label>chrono</label>
      </node>
      <node id="1068">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h</label>
      </node>
      <node id="1006">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Transpose.h</label>
      </node>
      <node id="1015">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/IO.h</label>
      </node>
      <node id="1041">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Select.h</label>
      </node>
      <node id="1111">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h</label>
      </node>
      <node id="952">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/Core</label>
      </node>
      <node id="1040">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/BooleanRedux.h</label>
      </node>
      <node id="931">
        <label>Matrix.h</label>
        <link refid="_matrix_8h_source"/>
        <childnode refid="915" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="928" relation="include">
        </childnode>
      </node>
      <node id="993">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseBinaryOp.h</label>
      </node>
      <node id="1078">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/OrderingMethods/Amd.h</label>
      </node>
      <node id="943">
        <label>thread</label>
      </node>
      <node id="980">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/MatrixCwiseUnaryOps.h</label>
      </node>
      <node id="1056">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/AmbiVector.h</label>
      </node>
      <node id="933">
        <label>kiss_fft.h</label>
        <link refid="kiss__fft_8h_source"/>
        <childnode refid="934" relation="include">
        </childnode>
        <childnode refid="935" relation="include">
        </childnode>
        <childnode refid="936" relation="include">
        </childnode>
        <childnode refid="937" relation="include">
        </childnode>
      </node>
      <node id="1021">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/TriangularMatrix.h</label>
      </node>
      <node id="1112">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h</label>
      </node>
      <node id="1081">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h</label>
      </node>
      <node id="917">
        <label>complex</label>
      </node>
      <node id="1084">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/misc/SparseSolve.h</label>
      </node>
      <node id="924">
        <label>algorithm</label>
      </node>
      <node id="986">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/NestByValue.h</label>
      </node>
      <node id="1050">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/GlobalFunctions.h</label>
      </node>
      <node id="935">
        <label>stdio.h</label>
      </node>
      <node id="1064">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseDot.h</label>
      </node>
      <node id="982">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/EigenBase.h</label>
      </node>
      <node id="961">
        <label>cstring</label>
      </node>
      <node id="997">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/SelfCwiseBinaryOp.h</label>
      </node>
      <node id="1032">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointProduct.h</label>
      </node>
      <node id="1017">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CommaInitializer.h</label>
      </node>
      <node id="988">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ReturnByValue.h</label>
      </node>
      <node id="1075">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/TriangularSolver.h</label>
      </node>
      <node id="1002">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Map.h</label>
      </node>
      <node id="932">
        <label>_kiss_fft_guts.h</label>
        <link refid="__kiss__fft__guts_8h_source"/>
        <childnode refid="933" relation="include">
        </childnode>
        <childnode refid="938" relation="include">
        </childnode>
      </node>
      <node id="1088">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h</label>
      </node>
      <node id="1079">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/NonMPL2.h</label>
      </node>
      <node id="1060">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseBlock.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__mat_8cpp_1a2547482268d02f73ac546db1aba7ca4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(matrix_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>matrix_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/testing/test_mat.cpp" line="6" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/testing/test_mat.cpp" bodystart="6" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keycpp_8h" kindref="compound">keycpp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">BOOST_AUTO_TEST_SUITE(KeyCpp_Unit_Testing)</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">BOOST_AUTO_TEST_CASE(matrix_test)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>1e-10;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>indexing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>A1<sp/>=<sp/>{{1.0,<sp/>2.0},</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3.0,<sp/>1.0}};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(0,0)<sp/>-<sp/>1.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(1,0)<sp/>-<sp/>3.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(0,1)<sp/>-<sp/>2.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(1,1)<sp/>-<sp/>1.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(0)<sp/>-<sp/>1.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(1)<sp/>-<sp/>3.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(2)<sp/>-<sp/>2.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(3)<sp/>-<sp/>1.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>modify<sp/>some<sp/>things:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A1(0,0)<sp/>=<sp/>5.5;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A1(1,0)<sp/>=<sp/>4.4;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(0,0)<sp/>-<sp/>5.5)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(1,0)<sp/>-<sp/>4.5)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(0,1)<sp/>-<sp/>2.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(1,1)<sp/>-<sp/>1.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A1(3)<sp/>=<sp/>5.5;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A1(2)<sp/>=<sp/>4.4;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(0)<sp/>-<sp/>5.5)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(1)<sp/>-<sp/>4.5)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(2)<sp/>-<sp/>4.5)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(3)<sp/>-<sp/>5.5)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>A2<sp/>=<sp/>{{1.0,<sp/>2.0},</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3.0,<sp/>1.0}};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>B2<sp/>=<sp/>{3.0,<sp/>1.0};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>C2<sp/>=<sp/>{2.0,<sp/>1.0};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(B2<sp/>-<sp/>A2.row(1)))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C2<sp/>-<sp/><ref refid="namespacekeycpp_1a7fd5ce0385e9cc7bed5b44ed8475e8aa" kindref="member" tooltip="Returns the transpose of matrix A. ">keycpp::transpose</ref>(A2.col(1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>A3<sp/>=<sp/>{{1.0,<sp/>2.0},</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3.0,<sp/>1.0}};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>B3<sp/>=<sp/>{5.0,<sp/>2.0};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>C3<sp/>=<sp/>{4.0,<sp/>3.0};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A3.row(1)<sp/>=<sp/>B3;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(B3<sp/>-<sp/>A3.row(1)))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A3.col(1)<sp/>=<sp/>C3;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C3<sp/>-<sp/><ref refid="namespacekeycpp_1a7fd5ce0385e9cc7bed5b44ed8475e8aa" kindref="member" tooltip="Returns the transpose of matrix A. ">keycpp::transpose</ref>(A3.col(1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>span</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>A1<sp/>=<sp/>{{1.0,<sp/>2.0},</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3.0,<sp/>1.0}};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>B1<sp/>=<sp/>{1.0,<sp/>2.0};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>C1<sp/>=<sp/>{1.0,<sp/>3.0};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(A1<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(),<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>())))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(A1<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1),<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(A1<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,1),<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(B1<sp/>-<sp/>A1(0,<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(B1<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,0),<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(<ref refid="namespacekeycpp_1a7fd5ce0385e9cc7bed5b44ed8475e8aa" kindref="member" tooltip="Returns the transpose of matrix A. ">keycpp::transpose</ref>(C1)<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,1),0)))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(<ref refid="namespacekeycpp_1a7fd5ce0385e9cc7bed5b44ed8475e8aa" kindref="member" tooltip="Returns the transpose of matrix A. ">keycpp::transpose</ref>(C1)<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,1),<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,0))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1),0)<sp/>=<sp/><ref refid="namespacekeycpp_1a7fd5ce0385e9cc7bed5b44ed8475e8aa" kindref="member" tooltip="Returns the transpose of matrix A. ">transpose</ref>(B1);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(<ref refid="namespacekeycpp_1a7fd5ce0385e9cc7bed5b44ed8475e8aa" kindref="member" tooltip="Returns the transpose of matrix A. ">transpose</ref>(B1)<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1),0)))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A1(1,<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1))<sp/>=<sp/>C1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1<sp/>-<sp/>A1(1,<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,0),<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1))<sp/>=<sp/>C1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,0),<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>matrix<sp/>double-double<sp/>multiplication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>A1<sp/>=<sp/>{{1.0,<sp/>2.0},</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3.0,<sp/>1.0}};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>B1<sp/>=<sp/>{{1.0,<sp/>-2.0},</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-2.0,<sp/>4.0}};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>C1<sp/>=<sp/>{{-3.0,<sp/>6.0},</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1.0,<sp/>-2.0}};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1<sp/>-<sp/>A1*B1))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1.row(0)<sp/>-<sp/>A1.row(0)*B1))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1.row(0).col(0)<sp/>-<sp/>A1.row(0)*B1.col(0)))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>A2<sp/>=<sp/>{1.0,<sp/>2.0};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>B2<sp/>=<sp/>{{1.0,<sp/>-2.0},</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-2.0,<sp/>4.0}};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>C2<sp/>=<sp/>{-3.0,<sp/>6.0};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C2<sp/>-<sp/>A2*B2))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>matrix<sp/>complex&lt;double&gt;-double<sp/>multiplication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>i<sp/>=<sp/>std::complex&lt;double&gt;(0.0,1.0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>A1<sp/>=<sp/>{{i*1.0,<sp/>i*2.0},</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{i*3.0,<sp/>i*1.0}};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>B1<sp/>=<sp/>{{1.0,<sp/>-2.0},</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-2.0,<sp/>4.0}};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>C1<sp/>=<sp/>{{-i*3.0,<sp/>i*6.0},</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{i*1.0,<sp/>-i*2.0}};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1<sp/>-<sp/>A1*B1))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1.row(0)<sp/>-<sp/>A1.row(0)*B1))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>A2<sp/>=<sp/>{i*1.0,<sp/>i*2.0};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double&gt;</ref><sp/>B2<sp/>=<sp/>{{1.0,<sp/>-2.0},</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-2.0,<sp/>4.0}};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>C2<sp/>=<sp/>{-i*3.0,<sp/>i*6.0};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C2<sp/>-<sp/>A2*B2))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>matrix<sp/>complex&lt;double&gt;-complex&lt;double&gt;<sp/>multiplication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>i<sp/>=<sp/>std::complex&lt;double&gt;(0.0,1.0);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>A1<sp/>=<sp/>{{i*1.0,<sp/>i*2.0},</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{i*3.0,<sp/>i*1.0}};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>B1<sp/>=<sp/>{{i*1.0,<sp/>-i*2.0},</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-i*2.0,<sp/>i*4.0}};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>C1<sp/>=<sp/>{{-i*i*3.0,<sp/>i*i*6.0},</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{i*i*1.0,<sp/>-i*i*2.0}};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1<sp/>-<sp/>A1*B1))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1.row(0)<sp/>-<sp/>A1.row(0)*B1))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1.row(0).col(0)<sp/>-<sp/>A1.row(0)*B1.col(0)))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>A2<sp/>=<sp/>{i*1.0,<sp/>i*2.0};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>B2<sp/>=<sp/>{{i*1.0,<sp/>-i*2.0},</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-i*2.0,<sp/>i*4.0}};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>&gt;<sp/>C2<sp/>=<sp/>{-i*i*3.0,<sp/>i*i*6.0};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C2<sp/>-<sp/>A2*B2))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="/media/Storage/Research/open_source/keycpp/testing/test_mat.cpp"/>
  </compounddef>
</doxygen>
