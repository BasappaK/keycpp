<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="test__sparse__mat_8cpp" kind="file">
    <compoundname>test_sparse_mat.cpp</compoundname>
    <includes local="no">boost/test/unit_test.hpp</includes>
    <includes refid="keycpp_8h" local="yes">keycpp.h</includes>
    <incdepgraph>
      <node id="1356">
        <label>list</label>
      </node>
      <node id="1473">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparsePermutation.h</label>
      </node>
      <node id="1462">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseMatrixBase.h</label>
      </node>
      <node id="1447">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CoreIterators.h</label>
      </node>
      <node id="1335">
        <label>stdarg.h</label>
      </node>
      <node id="1367">
        <label>functional</label>
      </node>
      <node id="1324">
        <label>iomanip</label>
      </node>
      <node id="1491">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/misc/Solve.h</label>
      </node>
      <node id="1499">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLUImpl.h</label>
      </node>
      <node id="1427">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ProductBase.h</label>
      </node>
      <node id="1478">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseProduct.h</label>
      </node>
      <node id="1333">
        <label>limits</label>
      </node>
      <node id="1409">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Stride.h</label>
      </node>
      <node id="1461">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseUtil.h</label>
      </node>
      <node id="1395">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ForceAlignedAccess.h</label>
      </node>
      <node id="1490">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseCholesky</label>
      </node>
      <node id="1422">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Fuzzy.h</label>
      </node>
      <node id="1359">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseCore</label>
      </node>
      <node id="1372">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/ForwardDeclarations.h</label>
      </node>
      <node id="1383">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DenseBase.h</label>
      </node>
      <node id="1337">
        <label>iterator</label>
      </node>
      <node id="1416">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Diagonal.h</label>
      </node>
      <node id="1385">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/MatrixBase.h</label>
      </node>
      <node id="1485">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/OrderingMethods</label>
      </node>
      <node id="1444">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularSolverMatrix.h</label>
      </node>
      <node id="1510">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_copy_to_ucol.h</label>
      </node>
      <node id="1456">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/ArrayCwiseBinaryOps.h</label>
      </node>
      <node id="1457">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ArrayWrapper.h</label>
      </node>
      <node id="1363">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/MKL_support.h</label>
      </node>
      <node id="1321">
        <label>boost/test/unit_test.hpp</label>
      </node>
      <node id="1438">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointMatrixVector.h</label>
      </node>
      <node id="1389">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/MatrixCwiseBinaryOps.h</label>
      </node>
      <node id="1420">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Redux.h</label>
      </node>
      <node id="1503">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_relax_snode.h</label>
      </node>
      <node id="1435">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralMatrixMatrix.h</label>
      </node>
      <node id="1442">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularMatrixVector.h</label>
      </node>
      <node id="1322">
        <label>keycpp.h</label>
        <link refid="keycpp_8h"/>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1324" relation="include">
        </childnode>
        <childnode refid="1325" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
        <childnode refid="1328" relation="include">
        </childnode>
        <childnode refid="1329" relation="include">
        </childnode>
        <childnode refid="1330" relation="include">
        </childnode>
        <childnode refid="1331" relation="include">
        </childnode>
        <childnode refid="1332" relation="include">
        </childnode>
        <childnode refid="1333" relation="include">
        </childnode>
        <childnode refid="1334" relation="include">
        </childnode>
        <childnode refid="1335" relation="include">
        </childnode>
        <childnode refid="1336" relation="include">
        </childnode>
        <childnode refid="1339" relation="include">
        </childnode>
        <childnode refid="1340" relation="include">
        </childnode>
        <childnode refid="1347" relation="include">
        </childnode>
        <childnode refid="1348" relation="include">
        </childnode>
        <childnode refid="1357" relation="include">
        </childnode>
        <childnode refid="1359" relation="include">
        </childnode>
        <childnode refid="1360" relation="include">
        </childnode>
        <childnode refid="1361" relation="include">
        </childnode>
        <childnode refid="1362" relation="include">
        </childnode>
        <childnode refid="1363" relation="include">
        </childnode>
        <childnode refid="1364" relation="include">
        </childnode>
        <childnode refid="1365" relation="include">
        </childnode>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1366" relation="include">
        </childnode>
        <childnode refid="1367" relation="include">
        </childnode>
        <childnode refid="1368" relation="include">
        </childnode>
        <childnode refid="1369" relation="include">
        </childnode>
        <childnode refid="1370" relation="include">
        </childnode>
        <childnode refid="1371" relation="include">
        </childnode>
        <childnode refid="1372" relation="include">
        </childnode>
        <childnode refid="1373" relation="include">
        </childnode>
        <childnode refid="1374" relation="include">
        </childnode>
        <childnode refid="1375" relation="include">
        </childnode>
        <childnode refid="1376" relation="include">
        </childnode>
        <childnode refid="1377" relation="include">
        </childnode>
        <childnode refid="1378" relation="include">
        </childnode>
        <childnode refid="1379" relation="include">
        </childnode>
        <childnode refid="1380" relation="include">
        </childnode>
        <childnode refid="1381" relation="include">
        </childnode>
        <childnode refid="1382" relation="include">
        </childnode>
        <childnode refid="1383" relation="include">
        </childnode>
        <childnode refid="1384" relation="include">
        </childnode>
        <childnode refid="1385" relation="include">
        </childnode>
        <childnode refid="1386" relation="include">
        </childnode>
        <childnode refid="1387" relation="include">
        </childnode>
        <childnode refid="1388" relation="include">
        </childnode>
        <childnode refid="1389" relation="include">
        </childnode>
        <childnode refid="1390" relation="include">
        </childnode>
        <childnode refid="1391" relation="include">
        </childnode>
        <childnode refid="1392" relation="include">
        </childnode>
        <childnode refid="1393" relation="include">
        </childnode>
        <childnode refid="1394" relation="include">
        </childnode>
        <childnode refid="1395" relation="include">
        </childnode>
        <childnode refid="1396" relation="include">
        </childnode>
        <childnode refid="1397" relation="include">
        </childnode>
        <childnode refid="1398" relation="include">
        </childnode>
        <childnode refid="1399" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
        <childnode refid="1401" relation="include">
        </childnode>
        <childnode refid="1402" relation="include">
        </childnode>
        <childnode refid="1403" relation="include">
        </childnode>
        <childnode refid="1404" relation="include">
        </childnode>
        <childnode refid="1405" relation="include">
        </childnode>
        <childnode refid="1406" relation="include">
        </childnode>
        <childnode refid="1407" relation="include">
        </childnode>
        <childnode refid="1408" relation="include">
        </childnode>
        <childnode refid="1409" relation="include">
        </childnode>
        <childnode refid="1410" relation="include">
        </childnode>
        <childnode refid="1411" relation="include">
        </childnode>
        <childnode refid="1412" relation="include">
        </childnode>
        <childnode refid="1413" relation="include">
        </childnode>
        <childnode refid="1414" relation="include">
        </childnode>
        <childnode refid="1415" relation="include">
        </childnode>
        <childnode refid="1416" relation="include">
        </childnode>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
        <childnode refid="1420" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1423" relation="include">
        </childnode>
        <childnode refid="1424" relation="include">
        </childnode>
        <childnode refid="1425" relation="include">
        </childnode>
        <childnode refid="1426" relation="include">
        </childnode>
        <childnode refid="1427" relation="include">
        </childnode>
        <childnode refid="1428" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
        <childnode refid="1430" relation="include">
        </childnode>
        <childnode refid="1431" relation="include">
        </childnode>
        <childnode refid="1432" relation="include">
        </childnode>
        <childnode refid="1433" relation="include">
        </childnode>
        <childnode refid="1434" relation="include">
        </childnode>
        <childnode refid="1435" relation="include">
        </childnode>
        <childnode refid="1436" relation="include">
        </childnode>
        <childnode refid="1437" relation="include">
        </childnode>
        <childnode refid="1438" relation="include">
        </childnode>
        <childnode refid="1439" relation="include">
        </childnode>
        <childnode refid="1440" relation="include">
        </childnode>
        <childnode refid="1441" relation="include">
        </childnode>
        <childnode refid="1442" relation="include">
        </childnode>
        <childnode refid="1443" relation="include">
        </childnode>
        <childnode refid="1444" relation="include">
        </childnode>
        <childnode refid="1445" relation="include">
        </childnode>
        <childnode refid="1446" relation="include">
        </childnode>
        <childnode refid="1447" relation="include">
        </childnode>
        <childnode refid="1448" relation="include">
        </childnode>
        <childnode refid="1449" relation="include">
        </childnode>
        <childnode refid="1450" relation="include">
        </childnode>
        <childnode refid="1451" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1455" relation="include">
        </childnode>
        <childnode refid="1456" relation="include">
        </childnode>
        <childnode refid="1457" relation="include">
        </childnode>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1459" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
        <childnode refid="1461" relation="include">
        </childnode>
        <childnode refid="1462" relation="include">
        </childnode>
        <childnode refid="1463" relation="include">
        </childnode>
        <childnode refid="1464" relation="include">
        </childnode>
        <childnode refid="1465" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1468" relation="include">
        </childnode>
        <childnode refid="1469" relation="include">
        </childnode>
        <childnode refid="1470" relation="include">
        </childnode>
        <childnode refid="1471" relation="include">
        </childnode>
        <childnode refid="1472" relation="include">
        </childnode>
        <childnode refid="1473" relation="include">
        </childnode>
        <childnode refid="1474" relation="include">
        </childnode>
        <childnode refid="1475" relation="include">
        </childnode>
        <childnode refid="1476" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1478" relation="include">
        </childnode>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
        <childnode refid="1481" relation="include">
        </childnode>
        <childnode refid="1482" relation="include">
        </childnode>
        <childnode refid="1483" relation="include">
        </childnode>
        <childnode refid="1484" relation="include">
        </childnode>
        <childnode refid="1485" relation="include">
        </childnode>
        <childnode refid="1486" relation="include">
        </childnode>
        <childnode refid="1487" relation="include">
        </childnode>
        <childnode refid="1488" relation="include">
        </childnode>
        <childnode refid="1489" relation="include">
        </childnode>
        <childnode refid="1490" relation="include">
        </childnode>
        <childnode refid="1491" relation="include">
        </childnode>
        <childnode refid="1492" relation="include">
        </childnode>
        <childnode refid="1493" relation="include">
        </childnode>
        <childnode refid="1494" relation="include">
        </childnode>
        <childnode refid="1495" relation="include">
        </childnode>
        <childnode refid="1496" relation="include">
        </childnode>
        <childnode refid="1497" relation="include">
        </childnode>
        <childnode refid="1498" relation="include">
        </childnode>
        <childnode refid="1499" relation="include">
        </childnode>
        <childnode refid="1500" relation="include">
        </childnode>
        <childnode refid="1501" relation="include">
        </childnode>
        <childnode refid="1502" relation="include">
        </childnode>
        <childnode refid="1503" relation="include">
        </childnode>
        <childnode refid="1504" relation="include">
        </childnode>
        <childnode refid="1505" relation="include">
        </childnode>
        <childnode refid="1506" relation="include">
        </childnode>
        <childnode refid="1507" relation="include">
        </childnode>
        <childnode refid="1508" relation="include">
        </childnode>
        <childnode refid="1509" relation="include">
        </childnode>
        <childnode refid="1510" relation="include">
        </childnode>
        <childnode refid="1511" relation="include">
        </childnode>
        <childnode refid="1512" relation="include">
        </childnode>
        <childnode refid="1513" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
        <childnode refid="1515" relation="include">
        </childnode>
        <childnode refid="1516" relation="include">
        </childnode>
        <childnode refid="1517" relation="include">
        </childnode>
        <childnode refid="1518" relation="include">
        </childnode>
        <childnode refid="1519" relation="include">
        </childnode>
        <childnode refid="1520" relation="include">
        </childnode>
        <childnode refid="1521" relation="include">
        </childnode>
        <childnode refid="1522" relation="include">
        </childnode>
      </node>
      <node id="1498">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_SupernodalMatrix.h</label>
      </node>
      <node id="1342">
        <label>stdlib.h</label>
      </node>
      <node id="1446">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/BandMatrix.h</label>
      </node>
      <node id="1371">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Constants.h</label>
      </node>
      <node id="1320">
        <label>test_sparse_mat.cpp</label>
        <link refid="test_sparse_mat.cpp"/>
        <childnode refid="1321" relation="include">
        </childnode>
        <childnode refid="1322" relation="include">
        </childnode>
      </node>
      <node id="1497">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_Structs.h</label>
      </node>
      <node id="1392">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/BlasUtil.h</label>
      </node>
      <node id="1439">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointMatrixMatrix.h</label>
      </node>
      <node id="1501">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_Memory.h</label>
      </node>
      <node id="1467">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseVector.h</label>
      </node>
      <node id="1384">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/BlockMethods.h</label>
      </node>
      <node id="1328">
        <label>cmath</label>
      </node>
      <node id="1366">
        <label>cassert</label>
      </node>
      <node id="1382">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DenseCoeffsBase.h</label>
      </node>
      <node id="1381">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Functors.h</label>
      </node>
      <node id="1338">
        <label>stdexcept</label>
      </node>
      <node id="1508">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_column_dfs.h</label>
      </node>
      <node id="1397">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/NoAlias.h</label>
      </node>
      <node id="1459">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/ReenableStupidWarnings.h</label>
      </node>
      <node id="1380">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/arch/Default/Settings.h</label>
      </node>
      <node id="1505">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_panel_dfs.h</label>
      </node>
      <node id="1327">
        <label>string</label>
      </node>
      <node id="1375">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/XprHelper.h</label>
      </node>
      <node id="1379">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/GenericPacketMath.h</label>
      </node>
      <node id="1460">
        <label>map</label>
      </node>
      <node id="1477">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseSparseProductWithPruning.h</label>
      </node>
      <node id="1417">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DiagonalProduct.h</label>
      </node>
      <node id="1434">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralMatrixVector.h</label>
      </node>
      <node id="1516">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/IterativeLinearSolvers</label>
      </node>
      <node id="1465">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseMatrix.h</label>
      </node>
      <node id="1517">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h</label>
      </node>
      <node id="1480">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseDiagonalProduct.h</label>
      </node>
      <node id="1353">
        <label>fstream</label>
      </node>
      <node id="1515">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseQR/SparseQR.h</label>
      </node>
      <node id="1336">
        <label>vector_k.h</label>
        <link refid="vector__k_8h_source"/>
        <childnode refid="1337" relation="include">
        </childnode>
        <childnode refid="1332" relation="include">
        </childnode>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1338" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
      </node>
      <node id="1452">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Replicate.h</label>
      </node>
      <node id="1402">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseUnaryOp.h</label>
      </node>
      <node id="1398">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/PlainObjectBase.h</label>
      </node>
      <node id="1376">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Memory.h</label>
      </node>
      <node id="1466">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/MappedSparseMatrix.h</label>
      </node>
      <node id="1346">
        <label>limits.h</label>
      </node>
      <node id="1451">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Random.h</label>
      </node>
      <node id="1445">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularSolverVector.h</label>
      </node>
      <node id="1432">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/Parallelizer.h</label>
      </node>
      <node id="1504">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_pivotL.h</label>
      </node>
      <node id="1373">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Meta.h</label>
      </node>
      <node id="1413">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Ref.h</label>
      </node>
      <node id="1521">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h</label>
      </node>
      <node id="1377">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/NumTraits.h</label>
      </node>
      <node id="1358">
        <label>Eigen/Sparse</label>
      </node>
      <node id="1418">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/PermutationMatrix.h</label>
      </node>
      <node id="1482">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseSelfAdjointView.h</label>
      </node>
      <node id="1469">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseTranspose.h</label>
      </node>
      <node id="1454">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ArrayBase.h</label>
      </node>
      <node id="1518">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h</label>
      </node>
      <node id="1431">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralBlockPanelKernel.h</label>
      </node>
      <node id="1471">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseCwiseBinaryOp.h</label>
      </node>
      <node id="1393">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DenseStorage.h</label>
      </node>
      <node id="1502">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_heap_relax_snode.h</label>
      </node>
      <node id="1404">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseUnaryView.h</label>
      </node>
      <node id="1330">
        <label>boost/range.hpp</label>
      </node>
      <node id="1430">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/SelfAdjointView.h</label>
      </node>
      <node id="1433">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/CoeffBasedProduct.h</label>
      </node>
      <node id="1345">
        <label>string.h</label>
      </node>
      <node id="1479">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseDenseProduct.h</label>
      </node>
      <node id="1378">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/MathFunctions.h</label>
      </node>
      <node id="1415">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/DiagonalMatrix.h</label>
      </node>
      <node id="1354">
        <label>cstdio</label>
      </node>
      <node id="1450">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/VectorwiseOp.h</label>
      </node>
      <node id="1500">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseColEtree.h</label>
      </node>
      <node id="1474">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseRedux.h</label>
      </node>
      <node id="1386">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/CommonCwiseUnaryOps.h</label>
      </node>
      <node id="1475">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseFuzzy.h</label>
      </node>
      <node id="1334">
        <label>ctime</label>
      </node>
      <node id="1400">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Array.h</label>
      </node>
      <node id="1428">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/GeneralProduct.h</label>
      </node>
      <node id="1514">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseQR</label>
      </node>
      <node id="1426">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Flagged.h</label>
      </node>
      <node id="1494">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCholesky/SimplicialCholesky_impl.h</label>
      </node>
      <node id="1443">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/TriangularMatrixMatrix.h</label>
      </node>
      <node id="1326">
        <label>vector</label>
      </node>
      <node id="1362">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/Macros.h</label>
      </node>
      <node id="1374">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/StaticAssert.h</label>
      </node>
      <node id="1453">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Reverse.h</label>
      </node>
      <node id="1424">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Swap.h</label>
      </node>
      <node id="1509">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_column_bmod.h</label>
      </node>
      <node id="1331">
        <label>utility</label>
      </node>
      <node id="1463">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/CompressedStorage.h</label>
      </node>
      <node id="1349">
        <label>sstream</label>
      </node>
      <node id="1406">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Dot.h</label>
      </node>
      <node id="1481">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseTriangularView.h</label>
      </node>
      <node id="1407">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/StableNorm.h</label>
      </node>
      <node id="1495">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/SparseLU</label>
      </node>
      <node id="1357">
        <label>SparseMatrix.h</label>
        <link refid="_sparse_matrix_8h_source"/>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1338" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1335" relation="include">
        </childnode>
        <childnode refid="1336" relation="include">
        </childnode>
        <childnode refid="1358" relation="include">
        </childnode>
      </node>
      <node id="1348">
        <label>Figure.h</label>
        <link refid="_figure_8h_source"/>
        <childnode refid="1328" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1325" relation="include">
        </childnode>
        <childnode refid="1324" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
        <childnode refid="1349" relation="include">
        </childnode>
        <childnode refid="1350" relation="include">
        </childnode>
        <childnode refid="1351" relation="include">
        </childnode>
        <childnode refid="1336" relation="include">
        </childnode>
        <childnode refid="1352" relation="include">
        </childnode>
        <childnode refid="1339" relation="include">
        </childnode>
      </node>
      <node id="1441">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointRank2Update.h</label>
      </node>
      <node id="1329">
        <label>boost/numeric/odeint.hpp</label>
      </node>
      <node id="1512">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_Utils.h</label>
      </node>
      <node id="1455">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/ArrayCwiseUnaryOps.h</label>
      </node>
      <node id="1493">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCholesky/SimplicialCholesky.h</label>
      </node>
      <node id="1347">
        <label>Spline.h</label>
        <link refid="_spline_8h_source"/>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1328" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1325" relation="include">
        </childnode>
        <childnode refid="1339" relation="include">
        </childnode>
      </node>
      <node id="1344">
        <label>math.h</label>
      </node>
      <node id="1419">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Transpositions.h</label>
      </node>
      <node id="1488">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/OrderingMethods/Ordering.h</label>
      </node>
      <node id="1368">
        <label>iosfwd</label>
      </node>
      <node id="1364">
        <label>cerrno</label>
      </node>
      <node id="1355">
        <label>cstdlib</label>
      </node>
      <node id="1403">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseNullaryOp.h</label>
      </node>
      <node id="1361">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/DisableStupidWarnings.h</label>
      </node>
      <node id="1437">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h</label>
      </node>
      <node id="1436">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/SolveTriangular.h</label>
      </node>
      <node id="1323">
        <label>iostream</label>
      </node>
      <node id="1387">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/CommonCwiseBinaryOps.h</label>
      </node>
      <node id="1365">
        <label>cstddef</label>
      </node>
      <node id="1411">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Block.h</label>
      </node>
      <node id="1507">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_panel_bmod.h</label>
      </node>
      <node id="1506">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_kernel_bmod.h</label>
      </node>
      <node id="1412">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/VectorBlock.h</label>
      </node>
      <node id="1399">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Matrix.h</label>
      </node>
      <node id="1470">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseCwiseUnaryOp.h</label>
      </node>
      <node id="1513">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU.h</label>
      </node>
      <node id="1370">
        <label>climits</label>
      </node>
      <node id="1352">
        <label>gnuplot_i.h</label>
        <link refid="gnuplot__i_8h_source"/>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1353" relation="include">
        </childnode>
        <childnode refid="1349" relation="include">
        </childnode>
        <childnode refid="1338" relation="include">
        </childnode>
        <childnode refid="1354" relation="include">
        </childnode>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1356" relation="include">
        </childnode>
      </node>
      <node id="1522">
        <label>znaupd.h</label>
        <link refid="znaupd_8h_source"/>
        <childnode refid="1328" relation="include">
        </childnode>
        <childnode refid="1325" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1358" relation="include">
        </childnode>
      </node>
      <node id="1391">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Assign.h</label>
      </node>
      <node id="1408">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/MapBase.h</label>
      </node>
      <node id="1421">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Visitor.h</label>
      </node>
      <node id="1484">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseView.h</label>
      </node>
      <node id="1511">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_pruneL.h</label>
      </node>
      <node id="1350">
        <label>chrono</label>
      </node>
      <node id="1476">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h</label>
      </node>
      <node id="1414">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Transpose.h</label>
      </node>
      <node id="1423">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/IO.h</label>
      </node>
      <node id="1449">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Select.h</label>
      </node>
      <node id="1519">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h</label>
      </node>
      <node id="1360">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/Core</label>
      </node>
      <node id="1448">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/BooleanRedux.h</label>
      </node>
      <node id="1339">
        <label>Matrix.h</label>
        <link refid="_matrix_8h_source"/>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1338" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1335" relation="include">
        </childnode>
        <childnode refid="1336" relation="include">
        </childnode>
      </node>
      <node id="1401">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CwiseBinaryOp.h</label>
      </node>
      <node id="1486">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/OrderingMethods/Amd.h</label>
      </node>
      <node id="1351">
        <label>thread</label>
      </node>
      <node id="1388">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/plugins/MatrixCwiseUnaryOps.h</label>
      </node>
      <node id="1464">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/AmbiVector.h</label>
      </node>
      <node id="1341">
        <label>kiss_fft.h</label>
        <link refid="kiss__fft_8h_source"/>
        <childnode refid="1342" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
        <childnode refid="1344" relation="include">
        </childnode>
        <childnode refid="1345" relation="include">
        </childnode>
      </node>
      <node id="1429">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/TriangularMatrix.h</label>
      </node>
      <node id="1520">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h</label>
      </node>
      <node id="1489">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/OrderingMethods/Eigen_Colamd.h</label>
      </node>
      <node id="1325">
        <label>complex</label>
      </node>
      <node id="1492">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/misc/SparseSolve.h</label>
      </node>
      <node id="1332">
        <label>algorithm</label>
      </node>
      <node id="1394">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/NestByValue.h</label>
      </node>
      <node id="1458">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/GlobalFunctions.h</label>
      </node>
      <node id="1343">
        <label>stdio.h</label>
      </node>
      <node id="1472">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseDot.h</label>
      </node>
      <node id="1390">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/EigenBase.h</label>
      </node>
      <node id="1369">
        <label>cstring</label>
      </node>
      <node id="1405">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/SelfCwiseBinaryOp.h</label>
      </node>
      <node id="1440">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/products/SelfadjointProduct.h</label>
      </node>
      <node id="1425">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/CommaInitializer.h</label>
      </node>
      <node id="1396">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/ReturnByValue.h</label>
      </node>
      <node id="1483">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/TriangularSolver.h</label>
      </node>
      <node id="1410">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/Map.h</label>
      </node>
      <node id="1340">
        <label>_kiss_fft_guts.h</label>
        <link refid="__kiss__fft__guts_8h_source"/>
        <childnode refid="1341" relation="include">
        </childnode>
        <childnode refid="1346" relation="include">
        </childnode>
      </node>
      <node id="1496">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseLU/SparseLU_gemm_kernel.h</label>
      </node>
      <node id="1487">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/Core/util/NonMPL2.h</label>
      </node>
      <node id="1468">
        <label>/media/Storage/Research/open_source/keycpp/include/Eigen/src/SparseCore/SparseBlock.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__sparse__mat_8cpp_1a199b4e72e5eebe3748c165bf6a4c0d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOST_AUTO_TEST_CASE</definition>
        <argsstring>(sparse_matrix_test)</argsstring>
        <name>BOOST_AUTO_TEST_CASE</name>
        <param>
          <type>sparse_matrix_test</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/testing/test_sparse_mat.cpp" line="6" column="1" bodyfile="/media/Storage/Research/open_source/keycpp/testing/test_sparse_mat.cpp" bodystart="6" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;boost/test/unit_test.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="keycpp_8h" kindref="compound">keycpp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">BOOST_AUTO_TEST_SUITE(KeyCpp_Unit_Testing)</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">BOOST_AUTO_TEST_CASE(sparse_matrix_test)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol<sp/>=<sp/>1e-10;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>indexing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>A1<sp/>=<sp/>{{1.0,<sp/>2.0},</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3.0,<sp/>1.0}};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(0,0)<sp/>-<sp/>1.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(1,0)<sp/>-<sp/>3.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(0,1)<sp/>-<sp/>2.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(1,1)<sp/>-<sp/>1.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(0)<sp/>-<sp/>1.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(1)<sp/>-<sp/>3.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(2)<sp/>-<sp/>2.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(3)<sp/>-<sp/>1.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>modify<sp/>some<sp/>things:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A1(0,0)<sp/>=<sp/>5.5;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A1(1,0)<sp/>=<sp/>4.4;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(0,0)<sp/>-<sp/>5.5)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(1,0)<sp/>-<sp/>4.5)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(0,1)<sp/>-<sp/>2.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(1,1)<sp/>-<sp/>1.0)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A1(3)<sp/>=<sp/>5.5;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A1(2)<sp/>=<sp/>4.4;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(0)<sp/>-<sp/>5.5)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(1)<sp/>-<sp/>4.5)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(2)<sp/>-<sp/>4.5)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(A1(3)<sp/>-<sp/>5.5)<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>A2<sp/>=<sp/>{{1.0,<sp/>2.0},</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3.0,<sp/>1.0}};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>B2<sp/>=<sp/>{3.0,<sp/>1.0};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>C2<sp/>=<sp/>{2.0,<sp/>1.0};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(B2<sp/>-<sp/>A2.row(1)))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C2<sp/>-<sp/><ref refid="namespacekeycpp_1a7fd5ce0385e9cc7bed5b44ed8475e8aa" kindref="member" tooltip="Returns the transpose of matrix A. ">keycpp::transpose</ref>(A2.col(1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>A3<sp/>=<sp/>{{1.0,<sp/>2.0},</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3.0,<sp/>1.0}};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>B3<sp/>=<sp/>{5.0,<sp/>2.0};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>C3<sp/>=<sp/>{4.0,<sp/>3.0};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A3.row(1)<sp/>=<sp/>B3;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(B3<sp/>-<sp/>A3.row(1)))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A3.col(1)<sp/>=<sp/>C3;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C3<sp/>-<sp/><ref refid="namespacekeycpp_1a7fd5ce0385e9cc7bed5b44ed8475e8aa" kindref="member" tooltip="Returns the transpose of matrix A. ">keycpp::transpose</ref>(A3.col(1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>span</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>A1<sp/>=<sp/>{{1.0,<sp/>2.0},</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3.0,<sp/>1.0}};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>B1<sp/>=<sp/>{1.0,<sp/>2.0};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>C1<sp/>=<sp/>{1.0,<sp/>3.0};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(A1<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(),<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>())))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(A1<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1),<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(A1<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,1),<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(B1<sp/>-<sp/>A1(0,<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(B1<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,0),<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,1))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(<ref refid="namespacekeycpp_1a7fd5ce0385e9cc7bed5b44ed8475e8aa" kindref="member" tooltip="Returns the transpose of matrix A. ">keycpp::transpose</ref>(C1)<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,1),0)))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(<ref refid="namespacekeycpp_1a7fd5ce0385e9cc7bed5b44ed8475e8aa" kindref="member" tooltip="Returns the transpose of matrix A. ">keycpp::transpose</ref>(C1)<sp/>-<sp/>A1(<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,1),<ref refid="classkeycpp_1_1span" kindref="compound">keycpp::span</ref>(0,1,0))))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>matrix<sp/>double-double<sp/>multiplication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>A1<sp/>=<sp/>{{1.0,<sp/>2.0},</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{3.0,<sp/>1.0}};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>B1<sp/>=<sp/>{{1.0,<sp/>-2.0},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-2.0,<sp/>4.0}};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>C1<sp/>=<sp/>{{-3.0,<sp/>6.0},</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{1.0,<sp/>-2.0}};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1<sp/>-<sp/>A1*B1))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1.row(0)<sp/>-<sp/>A1.row(0)*B1))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1.row(0).col(0)<sp/>-<sp/>A1.row(0)*B1.col(0)))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>A2<sp/>=<sp/>{1.0,<sp/>2.0};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>B2<sp/>=<sp/>{{1.0,<sp/>-2.0},</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-2.0,<sp/>4.0}};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>C2<sp/>=<sp/>{-3.0,<sp/>6.0};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C2<sp/>-<sp/>A2*B2))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>matrix<sp/>complex&lt;double&gt;-double<sp/>multiplication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>i<sp/>=<sp/>std::complex&lt;double&gt;(0.0,1.0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>,2,1&gt;<sp/>A1<sp/>=<sp/>{{i*1.0,<sp/>i*2.0},</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{i*3.0,<sp/>i*1.0}};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>B1<sp/>=<sp/>{{1.0,<sp/>-2.0},</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-2.0,<sp/>4.0}};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>,2,1&gt;<sp/>C1<sp/>=<sp/>{{-i*3.0,<sp/>i*6.0},</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{i*1.0,<sp/>-i*2.0}};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1<sp/>-<sp/>A1*B1))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1.row(0)<sp/>-<sp/>A1.row(0)*B1))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;std::complex&lt;double&gt;</ref>,2,1&gt;<sp/>A2<sp/>=<sp/>{i*1.0,<sp/>i*2.0};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classkeycpp_1_1matrix" kindref="compound">keycpp::matrix&lt;double,2,1&gt;</ref><sp/>B2<sp/>=<sp/>{{1.0,<sp/>-2.0},</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-2.0,<sp/>4.0}};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keycpp::matrix&lt;std::complex&lt;double&gt;,2,1&gt;<sp/>C2<sp/>=<sp/>{-i*3.0,<sp/>i*6.0};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C2<sp/>-<sp/>A2*B2))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>matrix<sp/>complex&lt;double&gt;-complex&lt;double&gt;<sp/>multiplication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::complex&lt;double&gt;<sp/>i<sp/>=<sp/>std::complex&lt;double&gt;(0.0,1.0);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keycpp::matrix&lt;std::complex&lt;double&gt;,2,1&gt;<sp/>A1<sp/>=<sp/>{{i*1.0,<sp/>i*2.0},</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{i*3.0,<sp/>i*1.0}};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keycpp::matrix&lt;std::complex&lt;double&gt;,2,1&gt;<sp/>B1<sp/>=<sp/>{{i*1.0,<sp/>-i*2.0},</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-i*2.0,<sp/>i*4.0}};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keycpp::matrix&lt;std::complex&lt;double&gt;,2,1&gt;<sp/>C1<sp/>=<sp/>{{-i*i*3.0,<sp/>i*i*6.0},</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{i*i*1.0,<sp/>-i*i*2.0}};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1<sp/>-<sp/>A1*B1))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1.row(0)<sp/>-<sp/>A1.row(0)*B1))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C1.row(0).col(0)<sp/>-<sp/>A1.row(0)*B1.col(0)))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keycpp::matrix&lt;std::complex&lt;double&gt;,2,1&gt;<sp/>A2<sp/>=<sp/>{i*1.0,<sp/>i*2.0};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keycpp::matrix&lt;std::complex&lt;double&gt;,2,1&gt;<sp/>B2<sp/>=<sp/>{{i*1.0,<sp/>-i*2.0},</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{-i*2.0,<sp/>i*4.0}};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keycpp::matrix&lt;std::complex&lt;double&gt;,2,1&gt;<sp/>C2<sp/>=<sp/>{-i*i*3.0,<sp/>i*i*6.0};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_CHECK(abs(keycpp::norm(C2<sp/>-<sp/>A2*B2))<sp/>&lt;<sp/>tol);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">BOOST_AUTO_TEST_SUITE_END()</highlight></codeline>
    </programlisting>
    <location file="/media/Storage/Research/open_source/keycpp/testing/test_sparse_mat.cpp"/>
  </compounddef>
</doxygen>
