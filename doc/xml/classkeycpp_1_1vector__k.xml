<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="classkeycpp_1_1vector__k" kind="class" prot="public">
    <compoundname>keycpp::vector_k</compoundname>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classkeycpp_1_1vector__k_1a0c53a4d249da380a1eec01c56176de9c" prot="public" static="no">
        <type><ref refid="classkeycpp_1_1_pointer_iterator" kindref="compound">PointerIterator</ref>&lt; T &gt;</type>
        <definition>typedef PointerIterator&lt;T&gt; keycpp::vector_k&lt; T &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="157" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classkeycpp_1_1vector__k_1a7f0415773f7c1b1cac7699d141ed1d3b" prot="public" static="no">
        <type><ref refid="classkeycpp_1_1_pointer_iterator" kindref="compound">PointerIterator</ref>&lt; const T &gt;</type>
        <definition>typedef PointerIterator&lt;const T&gt; keycpp::vector_k&lt; T &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="158" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classkeycpp_1_1vector__k_1a66a8ed8296d754341cedd8b242fc980a" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t keycpp::vector_k&lt; T &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="161" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classkeycpp_1_1vector__k_1abc7ae2bed19ed75dccc2f0aa57af689e" prot="public" static="no">
        <type>T</type>
        <definition>typedef T keycpp::vector_k&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="162" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classkeycpp_1_1vector__k_1aae155cf6b11b7c611b461db5b8b5bee2" prot="public" static="no">
        <type>iterator::difference_type</type>
        <definition>typedef iterator::difference_type keycpp::vector_k&lt; T &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="163" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classkeycpp_1_1vector__k_1af198dad61aeb005bb53aa82d4466e202" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t keycpp::vector_k&lt; T &gt;::my_size</definition>
        <argsstring></argsstring>
        <name>my_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="207" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1vector__k_1ac56e38785acd5c1df6920eb77f32feda" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t keycpp::vector_k&lt; T &gt;::my_capacity</definition>
        <argsstring></argsstring>
        <name>my_capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="208" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1vector__k_1a91d31a4cc042d8629f70873b4daabb59" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t keycpp::vector_k&lt; T &gt;::inc</definition>
        <argsstring></argsstring>
        <name>inc</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="209" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1vector__k_1a2dea1dcfadd6a74e75961940a95bb10d" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* keycpp::vector_k&lt; T &gt;::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="210" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1vector__k_1a0811d7f18a7f0c608735424203d575b4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool keycpp::vector_k&lt; T &gt;::dontFree</definition>
        <argsstring></argsstring>
        <name>dontFree</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="211" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a245bd9e09e97babbd19328d25c33695e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::vector_k&lt; T &gt;::vector_k</definition>
        <argsstring>()</argsstring>
        <name>vector_k</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="165" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="216" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a1f65dfce13d605312c497195081b71fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::vector_k&lt; T &gt;::vector_k</definition>
        <argsstring>(size_t size, const T &amp;initial)</argsstring>
        <name>vector_k</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>initial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="166" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="242" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a6902434fbd3b5ebbbedc1b068c3df3ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::vector_k&lt; T &gt;::vector_k</definition>
        <argsstring>(T *ptr, size_t size, size_t pinc)</argsstring>
        <name>vector_k</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pinc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="167" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="253" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a5b6df14409684df91f883c3bb33204f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::vector_k&lt; T &gt;::vector_k</definition>
        <argsstring>(const std::initializer_list&lt; T &gt; &amp;lst)</argsstring>
        <name>vector_k</name>
        <param>
          <type>const std::initializer_list&lt; T &gt; &amp;</type>
          <declname>lst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="168" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="261" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a694c6c797022382b57e2d51350e39afc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::vector_k&lt; T &gt;::vector_k</definition>
        <argsstring>(const vector_k&lt; T &gt; &amp;v)</argsstring>
        <name>vector_k</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="169" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="220" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a5e130370253f66d9968c35d41228bef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::vector_k&lt; T &gt;::vector_k</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>vector_k</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="170" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="231" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1aff99ff87a134803417ebeeffc1276816" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>keycpp::vector_k&lt; T &gt;::~vector_k</definition>
        <argsstring>()</argsstring>
        <name>~vector_k</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="171" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="427" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a651efbae7ea28e3e4cc3a07375a8de72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t keycpp::vector_k&lt; T &gt;::capacity</definition>
        <argsstring>() const </argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="173" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="421" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a829c7caf8f696e161375d18b715c918a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t keycpp::vector_k&lt; T &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="174" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="385" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1abbba6e3a7e0dc425a78645f78417c62c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool keycpp::vector_k&lt; T &gt;::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="175" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="391" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a57ec9796301fc1db249c531cbcb02b86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1_pointer_iterator" kindref="compound">iterator</ref></type>
        <definition>vector_k&lt; T &gt;::iterator keycpp::vector_k&lt; T &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="176" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="302" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1ad0768d945f869ec2bae8042952ef70c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1_pointer_iterator" kindref="compound">iterator</ref></type>
        <definition>vector_k&lt; T &gt;::iterator keycpp::vector_k&lt; T &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="177" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="309" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a4a0b078263c4dee69535701358c62b4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1_pointer_iterator" kindref="compound">const_iterator</ref></type>
        <definition>vector_k&lt; T &gt;::const_iterator keycpp::vector_k&lt; T &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="178" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="316" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a9453d606e3e95d4fa81e9287fc3914d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1_pointer_iterator" kindref="compound">const_iterator</ref></type>
        <definition>vector_k&lt; T &gt;::const_iterator keycpp::vector_k&lt; T &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="179" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="323" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1ac59a48a400d54bc34eb3355a0692a2f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; keycpp::vector_k&lt; T &gt;::front</definition>
        <argsstring>()</argsstring>
        <name>front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="180" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="330" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a07dff703d64e581533d2e5513a609577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; keycpp::vector_k&lt; T &gt;::back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="181" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="336" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a3672772db9bc7c4190c3b9c10b2d8e22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::vector_k&lt; T &gt;::push_back</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>push_back</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="182" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="342" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a3194498720cf8e14d33af58b82c70634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::vector_k&lt; T &gt;::pop_back</definition>
        <argsstring>()</argsstring>
        <name>pop_back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="183" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="352" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1aecd33f4505867fed1e49dbe3f9470117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::vector_k&lt; T &gt;::reserve</definition>
        <argsstring>(size_t capacity)</argsstring>
        <name>reserve</name>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="185" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="358" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a024e493fa716327aa16b2ba59771fce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::vector_k&lt; T &gt;::resize</definition>
        <argsstring>(size_t size)</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="186" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="402" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1aa7bae542df2d3ceeab63ab137a52df94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; keycpp::vector_k&lt; T &gt;::operator[]</definition>
        <argsstring>(const size_t index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="188" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="409" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1af9fc299b3eecce09bb7166954acf7b16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; keycpp::vector_k&lt; T &gt;::operator[]</definition>
        <argsstring>(const size_t index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="189" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="415" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1ab2030403334539d7df1001e8b9037fa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; T &gt; &amp;</type>
        <definition>vector_k&lt; T &gt; &amp; keycpp::vector_k&lt; T &gt;::operator=</definition>
        <argsstring>(const vector_k&lt; T &gt; &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="190" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="272" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a318832966719bc35aa0147ec2aeabb6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classkeycpp_1_1vector__k" kindref="compound">vector_k</ref>&lt; T &gt; &amp;</type>
        <definition>vector_k&lt; T &gt; &amp; keycpp::vector_k&lt; T &gt;::operator=</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="191" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="287" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a926f7d20093e3b36e92f10aaeea1e909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void keycpp::vector_k&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="192" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="435" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a54ffbb92ed1926e6066d26db886b4132" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>keycpp::vector_k&lt; T &gt;::operator std::vector&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>operator std::vector&lt; T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="195" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="194" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1vector__k_1a09f9ee871078a9f6602d564088a0e2ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t keycpp::vector_k&lt; T &gt;::get_inc</definition>
        <argsstring>() const </argsstring>
        <name>get_inc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="204" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="204" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/media/Storage/Research/open_source/keycpp/include/vector_k.h" line="154" bodyfile="/media/Storage/Research/open_source/keycpp/include/vector_k.h" bodystart="153" bodyend="212"/>
    <listofallmembers>
      <member refid="classkeycpp_1_1vector__k_1a07dff703d64e581533d2e5513a609577" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>back</name></member>
      <member refid="classkeycpp_1_1vector__k_1a57ec9796301fc1db249c531cbcb02b86" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>begin</name></member>
      <member refid="classkeycpp_1_1vector__k_1a4a0b078263c4dee69535701358c62b4a" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>begin</name></member>
      <member refid="classkeycpp_1_1vector__k_1a2dea1dcfadd6a74e75961940a95bb10d" prot="private" virt="non-virtual"><scope>keycpp::vector_k</scope><name>buffer</name></member>
      <member refid="classkeycpp_1_1vector__k_1a651efbae7ea28e3e4cc3a07375a8de72" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>capacity</name></member>
      <member refid="classkeycpp_1_1vector__k_1a926f7d20093e3b36e92f10aaeea1e909" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>clear</name></member>
      <member refid="classkeycpp_1_1vector__k_1a7f0415773f7c1b1cac7699d141ed1d3b" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>const_iterator</name></member>
      <member refid="classkeycpp_1_1vector__k_1aae155cf6b11b7c611b461db5b8b5bee2" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>difference_type</name></member>
      <member refid="classkeycpp_1_1vector__k_1a0811d7f18a7f0c608735424203d575b4" prot="private" virt="non-virtual"><scope>keycpp::vector_k</scope><name>dontFree</name></member>
      <member refid="classkeycpp_1_1vector__k_1abbba6e3a7e0dc425a78645f78417c62c" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>empty</name></member>
      <member refid="classkeycpp_1_1vector__k_1ad0768d945f869ec2bae8042952ef70c3" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>end</name></member>
      <member refid="classkeycpp_1_1vector__k_1a9453d606e3e95d4fa81e9287fc3914d3" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>end</name></member>
      <member refid="classkeycpp_1_1vector__k_1ac59a48a400d54bc34eb3355a0692a2f8" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>front</name></member>
      <member refid="classkeycpp_1_1vector__k_1a09f9ee871078a9f6602d564088a0e2ac" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>get_inc</name></member>
      <member refid="classkeycpp_1_1vector__k_1a91d31a4cc042d8629f70873b4daabb59" prot="private" virt="non-virtual"><scope>keycpp::vector_k</scope><name>inc</name></member>
      <member refid="classkeycpp_1_1vector__k_1a0c53a4d249da380a1eec01c56176de9c" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>iterator</name></member>
      <member refid="classkeycpp_1_1vector__k_1ac56e38785acd5c1df6920eb77f32feda" prot="private" virt="non-virtual"><scope>keycpp::vector_k</scope><name>my_capacity</name></member>
      <member refid="classkeycpp_1_1vector__k_1af198dad61aeb005bb53aa82d4466e202" prot="private" virt="non-virtual"><scope>keycpp::vector_k</scope><name>my_size</name></member>
      <member refid="classkeycpp_1_1vector__k_1a54ffbb92ed1926e6066d26db886b4132" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>operator std::vector&lt; T &gt;</name></member>
      <member refid="classkeycpp_1_1vector__k_1ab2030403334539d7df1001e8b9037fa9" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>operator=</name></member>
      <member refid="classkeycpp_1_1vector__k_1a318832966719bc35aa0147ec2aeabb6f" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>operator=</name></member>
      <member refid="classkeycpp_1_1vector__k_1aa7bae542df2d3ceeab63ab137a52df94" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>operator[]</name></member>
      <member refid="classkeycpp_1_1vector__k_1af9fc299b3eecce09bb7166954acf7b16" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>operator[]</name></member>
      <member refid="classkeycpp_1_1vector__k_1a3194498720cf8e14d33af58b82c70634" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>pop_back</name></member>
      <member refid="classkeycpp_1_1vector__k_1a3672772db9bc7c4190c3b9c10b2d8e22" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>push_back</name></member>
      <member refid="classkeycpp_1_1vector__k_1aecd33f4505867fed1e49dbe3f9470117" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>reserve</name></member>
      <member refid="classkeycpp_1_1vector__k_1a024e493fa716327aa16b2ba59771fce1" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>resize</name></member>
      <member refid="classkeycpp_1_1vector__k_1a829c7caf8f696e161375d18b715c918a" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>size</name></member>
      <member refid="classkeycpp_1_1vector__k_1a66a8ed8296d754341cedd8b242fc980a" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>size_type</name></member>
      <member refid="classkeycpp_1_1vector__k_1abc7ae2bed19ed75dccc2f0aa57af689e" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>value_type</name></member>
      <member refid="classkeycpp_1_1vector__k_1a245bd9e09e97babbd19328d25c33695e" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>vector_k</name></member>
      <member refid="classkeycpp_1_1vector__k_1a1f65dfce13d605312c497195081b71fa" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>vector_k</name></member>
      <member refid="classkeycpp_1_1vector__k_1a6902434fbd3b5ebbbedc1b068c3df3ec" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>vector_k</name></member>
      <member refid="classkeycpp_1_1vector__k_1a5b6df14409684df91f883c3bb33204f5" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>vector_k</name></member>
      <member refid="classkeycpp_1_1vector__k_1a694c6c797022382b57e2d51350e39afc" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>vector_k</name></member>
      <member refid="classkeycpp_1_1vector__k_1a5e130370253f66d9968c35d41228bef4" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>vector_k</name></member>
      <member refid="classkeycpp_1_1vector__k_1aff99ff87a134803417ebeeffc1276816" prot="public" virt="non-virtual"><scope>keycpp::vector_k</scope><name>~vector_k</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
