<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="classkeycpp_1_1_extrap" kind="class" prot="public">
    <compoundname>keycpp::Extrap</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classkeycpp_1_1_extrap_1a93fce8d80071b330c9d98a3c636bec59" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool keycpp::Extrap::isString</definition>
        <argsstring></argsstring>
        <name>isString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Spline.h" line="22" bodyfile="/media/Storage/Research/open_source/keycpp/include/Spline.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_extrap_1a40e7a484deffd17a1b85bf4fc4c55df4" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool keycpp::Extrap::isDouble</definition>
        <argsstring></argsstring>
        <name>isDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Spline.h" line="23" bodyfile="/media/Storage/Research/open_source/keycpp/include/Spline.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_extrap_1adbfea1e9b0f9e6adc8bf614eb68d7e4d" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string keycpp::Extrap::extrap_string</definition>
        <argsstring></argsstring>
        <name>extrap_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Spline.h" line="24" bodyfile="/media/Storage/Research/open_source/keycpp/include/Spline.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classkeycpp_1_1_extrap_1a84fdd870171e056398ffe8d1360a9339" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double keycpp::Extrap::extrap_val</definition>
        <argsstring></argsstring>
        <name>extrap_val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Spline.h" line="25" bodyfile="/media/Storage/Research/open_source/keycpp/include/Spline.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classkeycpp_1_1_extrap_1a820238a7fc8f94d2196fde866282b92f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>keycpp::Extrap::Extrap</definition>
        <argsstring>()</argsstring>
        <name>Extrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Spline.h" line="26" bodyfile="/media/Storage/Research/open_source/keycpp/include/Spline.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_extrap_1ae586bb0e00c6b14da76e78652f367874" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>keycpp::Extrap::Extrap</definition>
        <argsstring>(const char *extrap)</argsstring>
        <name>Extrap</name>
        <param>
          <type>const char *</type>
          <declname>extrap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Spline.h" line="27" bodyfile="/media/Storage/Research/open_source/keycpp/include/Spline.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classkeycpp_1_1_extrap_1ab180e328298f67473e83998af95a2824" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>keycpp::Extrap::Extrap</definition>
        <argsstring>(double extrap)</argsstring>
        <name>Extrap</name>
        <param>
          <type>double</type>
          <declname>extrap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/Storage/Research/open_source/keycpp/include/Spline.h" line="28" bodyfile="/media/Storage/Research/open_source/keycpp/include/Spline.h" bodystart="28" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/media/Storage/Research/open_source/keycpp/include/Spline.h" line="20" bodyfile="/media/Storage/Research/open_source/keycpp/include/Spline.h" bodystart="19" bodyend="29"/>
    <listofallmembers>
      <member refid="classkeycpp_1_1_extrap_1a820238a7fc8f94d2196fde866282b92f" prot="public" virt="non-virtual"><scope>keycpp::Extrap</scope><name>Extrap</name></member>
      <member refid="classkeycpp_1_1_extrap_1ae586bb0e00c6b14da76e78652f367874" prot="public" virt="non-virtual"><scope>keycpp::Extrap</scope><name>Extrap</name></member>
      <member refid="classkeycpp_1_1_extrap_1ab180e328298f67473e83998af95a2824" prot="public" virt="non-virtual"><scope>keycpp::Extrap</scope><name>Extrap</name></member>
      <member refid="classkeycpp_1_1_extrap_1adbfea1e9b0f9e6adc8bf614eb68d7e4d" prot="public" virt="non-virtual"><scope>keycpp::Extrap</scope><name>extrap_string</name></member>
      <member refid="classkeycpp_1_1_extrap_1a84fdd870171e056398ffe8d1360a9339" prot="public" virt="non-virtual"><scope>keycpp::Extrap</scope><name>extrap_val</name></member>
      <member refid="classkeycpp_1_1_extrap_1a40e7a484deffd17a1b85bf4fc4c55df4" prot="public" virt="non-virtual"><scope>keycpp::Extrap</scope><name>isDouble</name></member>
      <member refid="classkeycpp_1_1_extrap_1a93fce8d80071b330c9d98a3c636bec59" prot="public" virt="non-virtual"><scope>keycpp::Extrap</scope><name>isString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
